

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 22 16:56:39 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	12F629
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x5E,2
    20     0000                     
    21                           ; Generated 17/08/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC12F629 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0019                     	;# 
    69     0081                     	;# 
    70     0085                     	;# 
    71     008C                     	;# 
    72     008E                     	;# 
    73     0090                     	;# 
    74     0095                     	;# 
    75     0096                     	;# 
    76     0096                     	;# 
    77     0099                     	;# 
    78     009A                     	;# 
    79     009A                     	;# 
    80     009B                     	;# 
    81     009C                     	;# 
    82     009D                     	;# 
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000E                     	;# 
    93     000E                     	;# 
    94     000F                     	;# 
    95     0010                     	;# 
    96     0019                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     008C                     	;# 
   100     008E                     	;# 
   101     0090                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0096                     	;# 
   105     0099                     	;# 
   106     009A                     	;# 
   107     009A                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0019                     	;# 
   125     0081                     	;# 
   126     0085                     	;# 
   127     008C                     	;# 
   128     008E                     	;# 
   129     0090                     	;# 
   130     0095                     	;# 
   131     0096                     	;# 
   132     0096                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009A                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0019                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     008C                     	;# 
   156     008E                     	;# 
   157     0090                     	;# 
   158     0095                     	;# 
   159     0096                     	;# 
   160     0096                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009A                     	;# 
   164     009B                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     0005                     _GPIO	set	5
   168     0001                     _TMR0	set	1
   169     002B                     _GPIO3	set	43
   170     002A                     _GPIO2	set	42
   171     005B                     _GPIE	set	91
   172     005E                     _PEIE	set	94
   173     0059                     _INTF	set	89
   174     005C                     _INTE	set	92
   175     005F                     _GIE	set	95
   176     005D                     _T0IE	set	93
   177     002D                     _GPIO5	set	45
   178     005A                     _T0IF	set	90
   179     0029                     _GPIO1	set	41
   180     002C                     _GPIO4	set	44
   181     0085                     _TRISIO	set	133
   182     04B5                     _IOC5	set	1205
   183     04B4                     _IOC4	set	1204
   184     04B3                     _IOC3	set	1203
   185     04B2                     _IOC2	set	1202
   186     04B0                     _IOC0	set	1200
   187     0408                     _PS0	set	1032
   188     0409                     _PS1	set	1033
   189     040A                     _PS2	set	1034
   190     040B                     _PSA	set	1035
   191     040D                     _T0CS	set	1037
   192     04B1                     _IOC1	set	1201
   193                           
   194                           	psect	cinit
   195     0010                     start_initialization:	
   196                           ; #config settings
   197                           
   198     0010                     __initialization:
   199                           
   200                           ; Clear objects allocated to BANK0
   201     0010  1283               	bcf	3,5	;RP0=0, select bank0
   202     0011  01A0               	clrf	__pbssBANK0& (0+127)
   203     0012  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   204     0013  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   205     0014  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   206     0015  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   207     0016  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   208     0017  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   209     0018  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   210     0019  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   211     001A                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     001A                     __end_of__initialization:
   215     001A  0183               	clrf	3
   216     001B  2949               	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	bssBANK0
   219     0020                     __pbssBANK0:
   220     0020                     one_minute@count:
   221     0020                     	ds	2
   222     0022                     button@count:
   223     0022                     	ds	2
   224     0024                     blink@sp:
   225     0024                     	ds	1
   226     0025                     ISR@contador:
   227     0025                     	ds	1
   228     0026                     _dato:
   229     0026                     	ds	1
   230     0027                     _datosend:
   231     0027                     	ds	1
   232     0028                     _state:
   233     0028                     	ds	1
   234                           
   235                           	psect	cstackCOMMON
   236     0000                     __pcstackCOMMON:
   237     0000                     ??_blink:
   238     0000                     ??_one_minute:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0000                     ??_init:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0000                     ??_TX_frec:	
   245                           ; 1 bytes @ 0x0
   246                           
   247                           
   248                           	psect	cstackBANK0
   249     0029                     __pcstackBANK0:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0029                     ?_blink:
   253     0029                     ?_button:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0029                     ??_button:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0029                     ?_one_minute:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0029                     ?_init:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0029                     ?_send:	
   266                           ; 1 bytes @ 0x0
   267                           
   268     0029                     ??_send:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0029                     ?_recieve:	
   272                           ; 1 bytes @ 0x0
   273                           
   274     0029                     ??_recieve:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0029                     ?_TX_frec:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0029                     ?_ISR:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0029                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288     0029                     	ds	1
   289     002A                     send@ch:
   290                           
   291                           ; 1 bytes @ 0x1
   292     002A                     	ds	1
   293     002B                     ??_ISR:
   294                           
   295                           ; 1 bytes @ 0x2
   296     002B                     	ds	4
   297     002F                     ??_main:
   298                           
   299                           ; 1 bytes @ 0x6
   300     002F                     	ds	1
   301                           
   302                           	psect	maintext
   303     0149                     __pmaintext:	
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 30 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0
   323 ;;      Params:         0       0
   324 ;;      Locals:         0       0
   325 ;;      Temps:          0       1
   326 ;;      Totals:         0       1
   327 ;;Total ram usage:        1 bytes
   328 ;; Hardware stack levels required when called: 4
   329 ;; This function calls:
   330 ;;		_init
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336     0149                     _main:	
   337                           ;psect for function _main
   338                           
   339     0149                     l1107:	
   340                           ;incstack = 0
   341                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   342                           
   343                           
   344                           ;main.c: 31:     init();
   345     0149  21EF               	fcall	_init
   346     014A  2974               	goto	l1121
   347     014B                     l74:	
   348                           ;main.c: 34:             case ESPERA:
   349                           
   350                           
   351                           ;main.c: 35:                 GPIO5 = 0;
   352     014B  1285               	bcf	5,5	;volatile
   353                           
   354                           ;main.c: 36:                 break;
   355     014C  2974               	goto	l1121
   356     014D                     l1109:
   357                           
   358                           ;main.c: 38:                 GPIO5 ^= 1;
   359     014D  3020               	movlw	32
   360     014E  0685               	xorwf	5,f
   361                           
   362                           ;main.c: 39:                 _delay((unsigned long)((32*16)*(4000000/4000000.0)));
   363     014F  30AA               	movlw	170
   364     0150  00AF               	movwf	??_main
   365     0151                     u897:
   366     0151  0BAF               	decfsz	??_main,f
   367     0152  2951               	goto	u897
   368     0153  0000               	nop
   369                           
   370                           ;main.c: 40:                 break;
   371     0154  2974               	goto	l1121
   372     0155                     l1111:
   373                           
   374                           ;main.c: 42:                 GPIO5 ^= 1;
   375     0155  3020               	movlw	32
   376     0156  0685               	xorwf	5,f
   377                           
   378                           ;main.c: 43:                 _delay((unsigned long)((32*8)*(4000000/4000000.0)));
   379     0157  3055               	movlw	85
   380     0158  00AF               	movwf	??_main
   381     0159                     u907:
   382     0159  0BAF               	decfsz	??_main,f
   383     015A  2959               	goto	u907
   384                           
   385                           ;main.c: 44:             break;
   386     015B  2974               	goto	l1121
   387     015C                     l1113:
   388                           
   389                           ;main.c: 46:                 GPIO5 ^= 1;
   390     015C  3020               	movlw	32
   391     015D  0685               	xorwf	5,f
   392                           
   393                           ;main.c: 47:                 _delay((unsigned long)((32*4)*(4000000/4000000.0)));
   394     015E  302A               	movlw	42
   395     015F  00AF               	movwf	??_main
   396     0160                     u917:
   397     0160  0BAF               	decfsz	??_main,f
   398     0161  2960               	goto	u917
   399     0162  0000               	nop
   400                           
   401                           ;main.c: 48:                break;
   402     0163  2974               	goto	l1121
   403     0164                     l1115:
   404                           
   405                           ;main.c: 50:                 GPIO5 ^= 1;
   406     0164  3020               	movlw	32
   407     0165  0685               	xorwf	5,f
   408                           
   409                           ;main.c: 51:                 _delay((unsigned long)((32*2)*(4000000/4000000.0)));
   410     0166  3015               	movlw	21
   411     0167  00AF               	movwf	??_main
   412     0168                     u927:
   413     0168  0BAF               	decfsz	??_main,f
   414     0169  2968               	goto	u927
   415                           
   416                           ;main.c: 52:                 break;
   417     016A  2974               	goto	l1121
   418     016B                     l1117:
   419                           
   420                           ;main.c: 54:                 GPIO5 ^= 1;
   421     016B  3020               	movlw	32
   422     016C  0685               	xorwf	5,f
   423                           
   424                           ;main.c: 55:                 _delay((unsigned long)((32)*(4000000/4000000.0)));
   425     016D  300A               	movlw	10
   426     016E  00AF               	movwf	??_main
   427     016F                     u937:
   428     016F  0BAF               	decfsz	??_main,f
   429     0170  296F               	goto	u937
   430     0171  0000               	nop
   431                           
   432                           ;main.c: 56:                 break;
   433     0172  2974               	goto	l1121
   434     0173                     l1119:
   435     0173  01A8               	clrf	_state
   436     0174                     l1121:
   437     0174  1283               	bcf	3,5	;RP0=0, select bank0
   438     0175  0828               	movf	_state,w
   439                           
   440                           ; Switch size 1, requested type "simple"
   441                           ; Number of cases is 6, Range of values is 0 to 5
   442                           ; switch strategies available:
   443                           ; Name         Instructions Cycles
   444                           ; direct_byte           12     6 (fixed)
   445                           ; simple_byte           19    10 (average)
   446                           ; jumptable            260     6 (fixed)
   447                           ;	Chosen strategy is simple_byte
   448     0176  3A00               	xorlw	0	; case 0
   449     0177  1903               	skipnz
   450     0178  294B               	goto	l74
   451     0179  3A01               	xorlw	1	; case 1
   452     017A  1903               	skipnz
   453     017B  294D               	goto	l1109
   454     017C  3A03               	xorlw	3	; case 2
   455     017D  1903               	skipnz
   456     017E  2955               	goto	l1111
   457     017F  3A01               	xorlw	1	; case 3
   458     0180  1903               	skipnz
   459     0181  295C               	goto	l1113
   460     0182  3A07               	xorlw	7	; case 4
   461     0183  1903               	skipnz
   462     0184  2964               	goto	l1115
   463     0185  3A01               	xorlw	1	; case 5
   464     0186  1903               	skipnz
   465     0187  296B               	goto	l1117
   466     0188  2973               	goto	l1119
   467     0189  280F               	ljmp	start
   468     018A                     __end_of_main:
   469                           
   470                           	psect	text1
   471     01EF                     __ptext1:	
   472 ;; *************** function _init *****************
   473 ;; Defined at:
   474 ;;		line 4 in file "funtions.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0
   488 ;;      Params:         0       0
   489 ;;      Locals:         0       0
   490 ;;      Temps:          0       0
   491 ;;      Totals:         0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; Hardware stack levels required when called: 3
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502     01EF                     _init:	
   503                           ;psect for function _init
   504                           
   505     01EF                     l1037:	
   506                           ;incstack = 0
   507                           ; Regs used in _init: [wreg+status,2]
   508                           
   509                           
   510                           ;funtions.c: 5:     TRISIO = 0b00001010;
   511     01EF  300A               	movlw	10
   512     01F0  1683               	bsf	3,5	;RP0=1, select bank1
   513     01F1  0085               	movwf	5	;volatile
   514     01F2                     l1039:
   515                           
   516                           ;funtions.c: 6:     GPIO = 0;
   517     01F2  1283               	bcf	3,5	;RP0=0, select bank0
   518     01F3  0185               	clrf	5	;volatile
   519     01F4                     l1041:
   520                           
   521                           ;funtions.c: 7:     GPIO4 = HIGH;
   522     01F4  1605               	bsf	5,4	;volatile
   523     01F5                     l1043:
   524                           
   525                           ;funtions.c: 9:     T0CS = 0;
   526     01F5  1683               	bsf	3,5	;RP0=1, select bank1
   527     01F6  1281               	bcf	1,5	;volatile
   528     01F7                     l1045:
   529                           
   530                           ;funtions.c: 10:     PSA = 0;
   531     01F7  1181               	bcf	1,3	;volatile
   532     01F8                     l1047:
   533                           
   534                           ;funtions.c: 11:     PS2 =1;
   535     01F8  1501               	bsf	1,2	;volatile
   536     01F9                     l1049:
   537                           
   538                           ;funtions.c: 12:     PS1 = 1;
   539     01F9  1481               	bsf	1,1	;volatile
   540     01FA                     l1051:
   541                           
   542                           ;funtions.c: 13:     PS0 = 1;
   543     01FA  1401               	bsf	1,0	;volatile
   544     01FB                     l1053:
   545                           
   546                           ;funtions.c: 15:     TMR0 =0;
   547     01FB  1283               	bcf	3,5	;RP0=0, select bank0
   548     01FC  0181               	clrf	1	;volatile
   549     01FD                     l1055:
   550                           
   551                           ;funtions.c: 16:     T0IE = 1;
   552     01FD  168B               	bsf	11,5	;volatile
   553     01FE                     l1057:
   554                           
   555                           ;funtions.c: 18:     GIE = 1;
   556     01FE  178B               	bsf	11,7	;volatile
   557     01FF                     l1059:
   558                           
   559                           ;funtions.c: 19:     INTE = 0;
   560     01FF  120B               	bcf	11,4	;volatile
   561     0200                     l1061:
   562                           
   563                           ;funtions.c: 20:     INTF = 1;
   564     0200  148B               	bsf	11,1	;volatile
   565     0201                     l1063:
   566                           
   567                           ;funtions.c: 21:     PEIE=0;
   568     0201  130B               	bcf	11,6	;volatile
   569     0202                     l1065:
   570                           
   571                           ;funtions.c: 22:     GPIE = 1;
   572     0202  158B               	bsf	11,3	;volatile
   573     0203                     l1067:
   574                           
   575                           ;funtions.c: 26:     IOC0 = 0;
   576     0203  1683               	bsf	3,5	;RP0=1, select bank1
   577     0204  1016               	bcf	22,0	;volatile
   578     0205                     l1069:
   579                           
   580                           ;funtions.c: 27:     IOC1 = 1;
   581     0205  1496               	bsf	22,1	;volatile
   582     0206                     l1071:
   583                           
   584                           ;funtions.c: 28:     IOC2 = 0;
   585     0206  1116               	bcf	22,2	;volatile
   586     0207                     l1073:
   587                           
   588                           ;funtions.c: 29:     IOC3 = 0;
   589     0207  1196               	bcf	22,3	;volatile
   590     0208                     l1075:
   591                           
   592                           ;funtions.c: 30:     IOC4 = 0;
   593     0208  1216               	bcf	22,4	;volatile
   594     0209                     l1077:
   595                           
   596                           ;funtions.c: 31:     IOC5 = 0;
   597     0209  1296               	bcf	22,5	;volatile
   598     020A                     l139:
   599     020A  0008               	return
   600     020B                     __end_of_init:
   601                           
   602                           	psect	text2
   603     01BE                     __ptext2:	
   604 ;; *************** function _ISR *****************
   605 ;; Defined at:
   606 ;;		line 4 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0
   620 ;;      Params:         0       0
   621 ;;      Locals:         0       0
   622 ;;      Temps:          0       4
   623 ;;      Totals:         0       4
   624 ;;Total ram usage:        4 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 2
   627 ;; This function calls:
   628 ;;		_TX_frec
   629 ;;		_blink
   630 ;;		_button
   631 ;;		_one_minute
   632 ;;		_recieve
   633 ;; This function is called by:
   634 ;;		Interrupt level 1
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638     01BE                     _ISR:	
   639                           ;psect for function _ISR
   640                           
   641     01BE                     i1l1079:
   642                           
   643                           ;main.c: 6:    if (IOC1 && !GPIO1) {
   644     01BE  1683               	bsf	3,5	;RP0=1, select bank1
   645     01BF  1C96               	btfss	22,1	;volatile
   646     01C0  29C2               	goto	u85_21
   647     01C1  29C3               	goto	u85_20
   648     01C2                     u85_21:
   649     01C2  29CB               	goto	i1l1087
   650     01C3                     u85_20:
   651     01C3                     i1l1081:
   652     01C3  1283               	bcf	3,5	;RP0=0, select bank0
   653     01C4  1885               	btfsc	5,1	;volatile
   654     01C5  29C7               	goto	u86_21
   655     01C6  29C8               	goto	u86_20
   656     01C7                     u86_21:
   657     01C7  29CB               	goto	i1l1087
   658     01C8                     u86_20:
   659     01C8                     i1l1083:
   660                           
   661                           ;main.c: 7:     recieve();
   662     01C8  20F0               	fcall	_recieve
   663     01C9                     i1l1085:
   664                           
   665                           ;main.c: 8:     IOC1 = 0;
   666     01C9  1683               	bsf	3,5	;RP0=1, select bank1
   667     01CA  1096               	bcf	22,1	;volatile
   668     01CB                     i1l1087:
   669                           
   670                           ;main.c: 10:     if (T0IF) {
   671     01CB  1D0B               	btfss	11,2	;volatile
   672     01CC  29CE               	goto	u87_21
   673     01CD  29CF               	goto	u87_20
   674     01CE                     u87_21:
   675     01CE  29E4               	goto	i1l67
   676     01CF                     u87_20:
   677     01CF                     i1l1089:
   678                           
   679                           ;main.c: 11:          static char contador = 0;;main.c: 12:          blink();
   680     01CF  2223               	fcall	_blink
   681     01D0                     i1l1091:
   682                           
   683                           ;main.c: 13:          if(contador >= 16){
   684     01D0  3010               	movlw	16
   685     01D1  1283               	bcf	3,5	;RP0=0, select bank0
   686     01D2  0225               	subwf	ISR@contador,w
   687     01D3  1C03               	skipc
   688     01D4  29D6               	goto	u88_21
   689     01D5  29D7               	goto	u88_20
   690     01D6                     u88_21:
   691     01D6  29DD               	goto	i1l1101
   692     01D7                     u88_20:
   693     01D7                     i1l1093:
   694                           
   695                           ;main.c: 14:              TX_frec();
   696     01D7  218A               	fcall	_TX_frec
   697     01D8                     i1l1095:
   698                           
   699                           ;main.c: 15:              contador=0;
   700     01D8  1283               	bcf	3,5	;RP0=0, select bank0
   701     01D9  01A5               	clrf	ISR@contador
   702     01DA                     i1l1097:
   703                           
   704                           ;main.c: 16:              button();
   705     01DA  2090               	fcall	_button
   706     01DB                     i1l1099:
   707                           
   708                           ;main.c: 17:              one_minute();
   709     01DB  220B               	fcall	_one_minute
   710                           
   711                           ;main.c: 18:          } else
   712     01DC  29E1               	goto	i1l1103
   713     01DD                     i1l1101:
   714                           
   715                           ;main.c: 19:              contador++;
   716     01DD  3001               	movlw	1
   717     01DE  00DF               	movwf	btemp+1
   718     01DF  085F               	movf	btemp+1,w
   719     01E0  07A5               	addwf	ISR@contador,f
   720     01E1                     i1l1103:
   721                           
   722                           ;main.c: 20:          TMR0 = 0;
   723     01E1  1283               	bcf	3,5	;RP0=0, select bank0
   724     01E2  0181               	clrf	1	;volatile
   725     01E3                     i1l1105:
   726                           
   727                           ;main.c: 21:          T0IF=0;
   728     01E3  110B               	bcf	11,2	;volatile
   729     01E4                     i1l67:
   730     01E4  1283               	bcf	3,5	;RP0=0, select bank0
   731     01E5  082E               	movf	??_ISR+3,w
   732     01E6  082D               	movf	??_ISR+2,w
   733     01E7  008A               	movwf	10
   734     01E8  082C               	movf	??_ISR+1,w
   735     01E9  0084               	movwf	4
   736     01EA  0E2B               	swapf	??_ISR,w
   737     01EB  0083               	movwf	3
   738     01EC  0EDE               	swapf	btemp,f
   739     01ED  0E5E               	swapf	btemp,w
   740     01EE  0009               	retfie
   741     01EF                     __end_of_ISR:
   742                           
   743                           	psect	intentry
   744     0004                     __pintentry:	
   745                           ;incstack = 0
   746                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   747                           
   748     0004                     interrupt_function:
   749     005E                     saved_w	set	btemp
   750     0004  00DE               	movwf	btemp
   751     0005  0E03               	swapf	3,w
   752     0006  1283               	bcf	3,5	;RP0=0, select bank0
   753     0007  00AB               	movwf	??_ISR
   754     0008  0804               	movf	4,w
   755     0009  00AC               	movwf	??_ISR+1
   756     000A  080A               	movf	10,w
   757     000B  00AD               	movwf	??_ISR+2
   758     000C  085F               	movf	btemp+1,w
   759     000D  00AE               	movwf	??_ISR+3
   760     000E  29BE               	ljmp	_ISR
   761                           
   762                           	psect	text3
   763     00F0                     __ptext3:	
   764 ;; *************** function _recieve *****************
   765 ;; Defined at:
   766 ;;		line 43 in file "uart.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0
   780 ;;      Params:         0       0
   781 ;;      Locals:         0       0
   782 ;;      Temps:          0       1
   783 ;;      Totals:         0       1
   784 ;;Total ram usage:        1 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_ISR
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793     00F0                     _recieve:	
   794                           ;psect for function _recieve
   795                           
   796     00F0                     i1l941:	
   797                           ;incstack = 0
   798                           ; Regs used in _recieve: [wreg+status,2+status,0]
   799                           
   800                           
   801                           ;uart.c: 44:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   802     00F0  3021               	movlw	33
   803     00F1  1283               	bcf	3,5	;RP0=0, select bank0
   804     00F2  00A9               	movwf	??_recieve
   805     00F3                     u94_27:
   806     00F3  0BA9               	decfsz	??_recieve,f
   807     00F4  28F3               	goto	u94_27
   808     00F5                     i1l943:
   809                           
   810                           ;uart.c: 45:     dato.bit0= GPIO1;
   811     00F5  1283               	bcf	3,5	;RP0=0, select bank0
   812     00F6  1026               	bcf	_dato,0
   813     00F7  1C85               	btfss	5,1	;volatile
   814     00F8  28FA               	goto	u61_25
   815     00F9  1426               	bsf	_dato,0
   816     00FA                     u61_25:
   817                           
   818                           ;uart.c: 46:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   819     00FA  3021               	movlw	33
   820     00FB  1283               	bcf	3,5	;RP0=0, select bank0
   821     00FC  00A9               	movwf	??_recieve
   822     00FD                     u95_27:
   823     00FD  0BA9               	decfsz	??_recieve,f
   824     00FE  28FD               	goto	u95_27
   825     00FF                     i1l945:
   826                           
   827                           ;uart.c: 47:     dato.bit1= GPIO1;
   828     00FF  1283               	bcf	3,5	;RP0=0, select bank0
   829     0100  10A6               	bcf	_dato,1
   830     0101  1C85               	btfss	5,1	;volatile
   831     0102  2904               	goto	u62_25
   832     0103  14A6               	bsf	_dato,1
   833     0104                     u62_25:
   834                           
   835                           ;uart.c: 48:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   836     0104  3021               	movlw	33
   837     0105  1283               	bcf	3,5	;RP0=0, select bank0
   838     0106  00A9               	movwf	??_recieve
   839     0107                     u96_27:
   840     0107  0BA9               	decfsz	??_recieve,f
   841     0108  2907               	goto	u96_27
   842     0109                     i1l947:
   843                           
   844                           ;uart.c: 49:     dato.bit2= GPIO1;
   845     0109  1283               	bcf	3,5	;RP0=0, select bank0
   846     010A  1126               	bcf	_dato,2
   847     010B  1C85               	btfss	5,1	;volatile
   848     010C  290E               	goto	u63_25
   849     010D  1526               	bsf	_dato,2
   850     010E                     u63_25:
   851                           
   852                           ;uart.c: 50:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   853     010E  3021               	movlw	33
   854     010F  1283               	bcf	3,5	;RP0=0, select bank0
   855     0110  00A9               	movwf	??_recieve
   856     0111                     u97_27:
   857     0111  0BA9               	decfsz	??_recieve,f
   858     0112  2911               	goto	u97_27
   859     0113                     i1l949:
   860                           
   861                           ;uart.c: 51:     dato.bit3= GPIO1;
   862     0113  1283               	bcf	3,5	;RP0=0, select bank0
   863     0114  11A6               	bcf	_dato,3
   864     0115  1C85               	btfss	5,1	;volatile
   865     0116  2918               	goto	u64_25
   866     0117  15A6               	bsf	_dato,3
   867     0118                     u64_25:
   868                           
   869                           ;uart.c: 52:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   870     0118  3021               	movlw	33
   871     0119  1283               	bcf	3,5	;RP0=0, select bank0
   872     011A  00A9               	movwf	??_recieve
   873     011B                     u98_27:
   874     011B  0BA9               	decfsz	??_recieve,f
   875     011C  291B               	goto	u98_27
   876     011D                     i1l951:
   877                           
   878                           ;uart.c: 53:     dato.bit4= GPIO1;
   879     011D  1283               	bcf	3,5	;RP0=0, select bank0
   880     011E  1226               	bcf	_dato,4
   881     011F  1C85               	btfss	5,1	;volatile
   882     0120  2922               	goto	u65_25
   883     0121  1626               	bsf	_dato,4
   884     0122                     u65_25:
   885                           
   886                           ;uart.c: 54:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   887     0122  3021               	movlw	33
   888     0123  1283               	bcf	3,5	;RP0=0, select bank0
   889     0124  00A9               	movwf	??_recieve
   890     0125                     u99_27:
   891     0125  0BA9               	decfsz	??_recieve,f
   892     0126  2925               	goto	u99_27
   893     0127                     i1l953:
   894                           
   895                           ;uart.c: 55:     dato.bit5= GPIO1;
   896     0127  1283               	bcf	3,5	;RP0=0, select bank0
   897     0128  12A6               	bcf	_dato,5
   898     0129  1C85               	btfss	5,1	;volatile
   899     012A  292C               	goto	u66_25
   900     012B  16A6               	bsf	_dato,5
   901     012C                     u66_25:
   902                           
   903                           ;uart.c: 56:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   904     012C  3021               	movlw	33
   905     012D  1283               	bcf	3,5	;RP0=0, select bank0
   906     012E  00A9               	movwf	??_recieve
   907     012F                     u100_27:
   908     012F  0BA9               	decfsz	??_recieve,f
   909     0130  292F               	goto	u100_27
   910     0131                     i1l955:
   911                           
   912                           ;uart.c: 57:     dato.bit6= GPIO1;
   913     0131  1283               	bcf	3,5	;RP0=0, select bank0
   914     0132  1326               	bcf	_dato,6
   915     0133  1C85               	btfss	5,1	;volatile
   916     0134  2936               	goto	u67_25
   917     0135  1726               	bsf	_dato,6
   918     0136                     u67_25:
   919                           
   920                           ;uart.c: 58:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   921     0136  3021               	movlw	33
   922     0137  1283               	bcf	3,5	;RP0=0, select bank0
   923     0138  00A9               	movwf	??_recieve
   924     0139                     u101_27:
   925     0139  0BA9               	decfsz	??_recieve,f
   926     013A  2939               	goto	u101_27
   927     013B                     i1l957:
   928                           
   929                           ;uart.c: 59:     dato.bit7= GPIO1;
   930     013B  1283               	bcf	3,5	;RP0=0, select bank0
   931     013C  13A6               	bcf	_dato,7
   932     013D  1C85               	btfss	5,1	;volatile
   933     013E  2940               	goto	u68_25
   934     013F  17A6               	bsf	_dato,7
   935     0140                     u68_25:
   936     0140                     i1l959:
   937                           
   938                           ;uart.c: 60:     if(dato.byte == 'c')
   939     0140  3063               	movlw	99
   940     0141  1283               	bcf	3,5	;RP0=0, select bank0
   941     0142  0626               	xorwf	_dato,w
   942     0143  1D03               	btfss	3,2
   943     0144  2946               	goto	u69_21
   944     0145  2947               	goto	u69_20
   945     0146                     u69_21:
   946     0146  2948               	goto	i1l19
   947     0147                     u69_20:
   948     0147                     i1l961:
   949                           
   950                           ;uart.c: 61:         state = ESPERA;
   951     0147  01A8               	clrf	_state
   952     0148                     i1l19:
   953     0148  0008               	return
   954     0149                     __end_of_recieve:
   955                           
   956                           	psect	text4
   957     020B                     __ptext4:	
   958 ;; *************** function _one_minute *****************
   959 ;; Defined at:
   960 ;;		line 72 in file "funtions.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, status,2
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0
   974 ;;      Params:         0       0
   975 ;;      Locals:         0       0
   976 ;;      Temps:          0       0
   977 ;;      Totals:         0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_ISR
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987     020B                     _one_minute:	
   988                           ;psect for function _one_minute
   989                           
   990     020B                     i1l1029:	
   991                           ;incstack = 0
   992                           ; Regs used in _one_minute: [wreg+status,2]
   993                           
   994                           
   995                           ;funtions.c: 73:     static unsigned int count = 0;;funtions.c: 74:     count++;
   996     020B  3001               	movlw	1
   997     020C  1283               	bcf	3,5	;RP0=0, select bank0
   998     020D  07A0               	addwf	one_minute@count,f
   999     020E  1803               	skipnc
  1000     020F  0AA1               	incf	one_minute@count+1,f
  1001     0210  3000               	movlw	0
  1002     0211  07A1               	addwf	one_minute@count+1,f
  1003                           
  1004                           ;funtions.c: 75:     if (count >= 30)
  1005     0212  3000               	movlw	0
  1006     0213  0221               	subwf	one_minute@count+1,w
  1007     0214  301E               	movlw	30
  1008     0215  1903               	skipnz
  1009     0216  0220               	subwf	one_minute@count,w
  1010     0217  1C03               	skipc
  1011     0218  2A1A               	goto	u83_21
  1012     0219  2A1B               	goto	u83_20
  1013     021A                     u83_21:
  1014     021A  2A1C               	goto	i1l1033
  1015     021B                     u83_20:
  1016     021B                     i1l1031:
  1017                           
  1018                           ;funtions.c: 76:         state=ESPERA;
  1019     021B  01A8               	clrf	_state
  1020     021C                     i1l1033:
  1021                           
  1022                           ;funtions.c: 77:     if ( GPIO3==1 )
  1023     021C  1D85               	btfss	5,3	;volatile
  1024     021D  2A1F               	goto	u84_21
  1025     021E  2A20               	goto	u84_20
  1026     021F                     u84_21:
  1027     021F  2A22               	goto	i1l171
  1028     0220                     u84_20:
  1029     0220                     i1l1035:
  1030                           
  1031                           ;funtions.c: 78:         count=0;
  1032     0220  01A0               	clrf	one_minute@count
  1033     0221  01A1               	clrf	one_minute@count+1
  1034     0222                     i1l171:
  1035     0222  0008               	return
  1036     0223                     __end_of_one_minute:
  1037                           
  1038                           	psect	text5
  1039     0090                     __ptext5:	
  1040 ;; *************** function _button *****************
  1041 ;; Defined at:
  1042 ;;		line 45 in file "funtions.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, btemp+1
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0
  1056 ;;      Params:         0       0
  1057 ;;      Locals:         0       0
  1058 ;;      Temps:          0       1
  1059 ;;      Totals:         0       1
  1060 ;;Total ram usage:        1 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_ISR
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069     0090                     _button:	
  1070                           ;psect for function _button
  1071                           
  1072     0090                     i1l987:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _button: [wreg+status,2+status,0+btemp+1]
  1075                           
  1076                           
  1077                           ;funtions.c: 46:     static unsigned int count = 0;;funtions.c: 48:     if(GPIO3==1){
  1078     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1079     0091  1D85               	btfss	5,3	;volatile
  1080     0092  2894               	goto	u71_21
  1081     0093  2895               	goto	u71_20
  1082     0094                     u71_21:
  1083     0094  28ED               	goto	i1l1027
  1084     0095                     u71_20:
  1085     0095                     i1l989:
  1086                           
  1087                           ;funtions.c: 49:         _delay((unsigned long)((20)*(4000000/4000000.0)));
  1088     0095  3006               	movlw	6
  1089     0096  00A9               	movwf	??_button
  1090     0097                     u102_27:
  1091     0097  0BA9               	decfsz	??_button,f
  1092     0098  2897               	goto	u102_27
  1093     0099  0000               	nop
  1094     009A                     i1l991:
  1095                           
  1096                           ;funtions.c: 51:         if(count==0 && state==ESPERA && (GPIO3==1) ){
  1097     009A  1283               	bcf	3,5	;RP0=0, select bank0
  1098     009B  0822               	movf	button@count,w
  1099     009C  0423               	iorwf	button@count+1,w
  1100     009D  1D03               	btfss	3,2
  1101     009E  28A0               	goto	u72_21
  1102     009F  28A1               	goto	u72_20
  1103     00A0                     u72_21:
  1104     00A0  28B0               	goto	i1l1001
  1105     00A1                     u72_20:
  1106     00A1                     i1l993:
  1107     00A1  0828               	movf	_state,w
  1108     00A2  1D03               	btfss	3,2
  1109     00A3  28A5               	goto	u73_21
  1110     00A4  28A6               	goto	u73_20
  1111     00A5                     u73_21:
  1112     00A5  28B0               	goto	i1l1001
  1113     00A6                     u73_20:
  1114     00A6                     i1l995:
  1115     00A6  1D85               	btfss	5,3	;volatile
  1116     00A7  28A9               	goto	u74_21
  1117     00A8  28AA               	goto	u74_20
  1118     00A9                     u74_21:
  1119     00A9  28B0               	goto	i1l1001
  1120     00AA                     u74_20:
  1121     00AA                     i1l997:
  1122                           
  1123                           ;funtions.c: 52:             state=F1K;
  1124     00AA  01A8               	clrf	_state
  1125     00AB  0AA8               	incf	_state,f
  1126     00AC                     i1l999:
  1127                           
  1128                           ;funtions.c: 53:             count=1;}
  1129     00AC  3001               	movlw	1
  1130     00AD  00A2               	movwf	button@count
  1131     00AE  3000               	movlw	0
  1132     00AF  00A3               	movwf	button@count+1
  1133     00B0                     i1l1001:
  1134                           
  1135                           ;funtions.c: 55:         if(count==0 && (state!=ESPERA) && (GPIO3==1) ){
  1136     00B0  0822               	movf	button@count,w
  1137     00B1  0423               	iorwf	button@count+1,w
  1138     00B2  1D03               	btfss	3,2
  1139     00B3  28B5               	goto	u75_21
  1140     00B4  28B6               	goto	u75_20
  1141     00B5                     u75_21:
  1142     00B5  28C5               	goto	i1l1011
  1143     00B6                     u75_20:
  1144     00B6                     i1l1003:
  1145     00B6  0828               	movf	_state,w
  1146     00B7  1903               	btfsc	3,2
  1147     00B8  28BA               	goto	u76_21
  1148     00B9  28BB               	goto	u76_20
  1149     00BA                     u76_21:
  1150     00BA  28C5               	goto	i1l1011
  1151     00BB                     u76_20:
  1152     00BB                     i1l1005:
  1153     00BB  1D85               	btfss	5,3	;volatile
  1154     00BC  28BE               	goto	u77_21
  1155     00BD  28BF               	goto	u77_20
  1156     00BE                     u77_21:
  1157     00BE  28C5               	goto	i1l1011
  1158     00BF                     u77_20:
  1159     00BF                     i1l1007:
  1160                           
  1161                           ;funtions.c: 56:             GPIO5=LOW;
  1162     00BF  1285               	bcf	5,5	;volatile
  1163     00C0                     i1l154:	
  1164                           ;funtions.c: 57:             while( GPIO3==1 ){}
  1165                           
  1166     00C0  1985               	btfsc	5,3	;volatile
  1167     00C1  28C3               	goto	u78_21
  1168     00C2  28C4               	goto	u78_20
  1169     00C3                     u78_21:
  1170     00C3  28C0               	goto	i1l154
  1171     00C4                     u78_20:
  1172     00C4                     i1l1009:
  1173                           
  1174                           ;funtions.c: 58:                 state=ESPERA;}
  1175     00C4  01A8               	clrf	_state
  1176     00C5                     i1l1011:
  1177                           
  1178                           ;funtions.c: 60:         if((count!=0) && (GPIO3==1) )
  1179     00C5  0822               	movf	button@count,w
  1180     00C6  0423               	iorwf	button@count+1,w
  1181     00C7  1903               	btfsc	3,2
  1182     00C8  28CA               	goto	u79_21
  1183     00C9  28CB               	goto	u79_20
  1184     00CA                     u79_21:
  1185     00CA  28D5               	goto	i1l1017
  1186     00CB                     u79_20:
  1187     00CB                     i1l1013:
  1188     00CB  1D85               	btfss	5,3	;volatile
  1189     00CC  28CE               	goto	u80_21
  1190     00CD  28CF               	goto	u80_20
  1191     00CE                     u80_21:
  1192     00CE  28D5               	goto	i1l1017
  1193     00CF                     u80_20:
  1194     00CF                     i1l1015:
  1195                           
  1196                           ;funtions.c: 61:             count++;
  1197     00CF  3001               	movlw	1
  1198     00D0  07A2               	addwf	button@count,f
  1199     00D1  1803               	skipnc
  1200     00D2  0AA3               	incf	button@count+1,f
  1201     00D3  3000               	movlw	0
  1202     00D4  07A3               	addwf	button@count+1,f
  1203     00D5                     i1l1017:
  1204                           
  1205                           ;funtions.c: 63:         if(count >= 1){
  1206     00D5  0822               	movf	button@count,w
  1207     00D6  0423               	iorwf	button@count+1,w
  1208     00D7  1903               	btfsc	3,2
  1209     00D8  28DA               	goto	u81_21
  1210     00D9  28DB               	goto	u81_20
  1211     00DA                     u81_21:
  1212     00DA  28EF               	goto	i1l164
  1213     00DB                     u81_20:
  1214     00DB                     i1l1019:
  1215                           
  1216                           ;funtions.c: 64:             (state>F16K) ? state=F1K : state++;
  1217     00DB  3006               	movlw	6
  1218     00DC  0228               	subwf	_state,w
  1219     00DD  1C03               	skipc
  1220     00DE  28E0               	goto	u82_21
  1221     00DF  28E1               	goto	u82_20
  1222     00E0                     u82_21:
  1223     00E0  28E4               	goto	i1l1023
  1224     00E1                     u82_20:
  1225     00E1                     i1l1021:
  1226     00E1  01A8               	clrf	_state
  1227     00E2  0AA8               	incf	_state,f
  1228     00E3  28E8               	goto	i1l1025
  1229     00E4                     i1l1023:
  1230     00E4  3001               	movlw	1
  1231     00E5  00DF               	movwf	btemp+1
  1232     00E6  085F               	movf	btemp+1,w
  1233     00E7  07A8               	addwf	_state,f
  1234     00E8                     i1l1025:
  1235                           
  1236                           ;funtions.c: 65:             count=1;}
  1237     00E8  3001               	movlw	1
  1238     00E9  00A2               	movwf	button@count
  1239     00EA  3000               	movlw	0
  1240     00EB  00A3               	movwf	button@count+1
  1241     00EC  28EF               	goto	i1l164
  1242     00ED                     i1l1027:
  1243                           
  1244                           ;funtions.c: 67:         count=0;
  1245     00ED  01A2               	clrf	button@count
  1246     00EE  01A3               	clrf	button@count+1
  1247     00EF                     i1l164:
  1248     00EF  0008               	return
  1249     00F0                     __end_of_button:
  1250                           
  1251                           	psect	text6
  1252     0223                     __ptext6:	
  1253 ;; *************** function _blink *****************
  1254 ;; Defined at:
  1255 ;;		line 36 in file "funtions.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0
  1269 ;;      Params:         0       0
  1270 ;;      Locals:         0       0
  1271 ;;      Temps:          0       0
  1272 ;;      Totals:         0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_ISR
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282     0223                     _blink:	
  1283                           ;psect for function _blink
  1284                           
  1285     0223                     i1l981:	
  1286                           ;incstack = 0
  1287                           ; Regs used in _blink: [wreg]
  1288                           
  1289                           
  1290                           ;funtions.c: 37:     static unsigned char sp = ESPERA;;funtions.c: 38:     if (sp != sta
      +                          te){
  1291     0223  1283               	bcf	3,5	;RP0=0, select bank0
  1292     0224  0824               	movf	blink@sp,w
  1293     0225  0628               	xorwf	_state,w
  1294     0226  1903               	skipnz
  1295     0227  2A29               	goto	u70_21
  1296     0228  2A2A               	goto	u70_20
  1297     0229                     u70_21:
  1298     0229  2A2E               	goto	i1l144
  1299     022A                     u70_20:
  1300     022A                     i1l983:
  1301                           
  1302                           ;funtions.c: 39:         sp=state;
  1303     022A  0828               	movf	_state,w
  1304     022B  00A4               	movwf	blink@sp
  1305     022C                     i1l985:
  1306                           
  1307                           ;funtions.c: 40:         GPIO2=HIGH;}
  1308     022C  1505               	bsf	5,2	;volatile
  1309     022D  2A2F               	goto	i1l146
  1310     022E                     i1l144:	
  1311                           ;funtions.c: 41:     else
  1312                           
  1313                           
  1314                           ;funtions.c: 42:         GPIO2=LOW;
  1315     022E  1105               	bcf	5,2	;volatile
  1316     022F                     i1l146:
  1317     022F  0008               	return
  1318     0230                     __end_of_blink:
  1319                           
  1320                           	psect	text7
  1321     018A                     __ptext7:	
  1322 ;; *************** function _TX_frec *****************
  1323 ;; Defined at:
  1324 ;;		line 67 in file "uart.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0
  1338 ;;      Params:         0       0
  1339 ;;      Locals:         0       0
  1340 ;;      Temps:          0       0
  1341 ;;      Totals:         0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 1
  1345 ;; This function calls:
  1346 ;;		_send
  1347 ;; This function is called by:
  1348 ;;		_ISR
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352     018A                     _TX_frec:	
  1353                           ;psect for function _TX_frec
  1354                           
  1355     018A                     i1l963:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _TX_frec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1358                           
  1359                           
  1360                           ;uart.c: 68:     send('F');
  1361     018A  3046               	movlw	70
  1362     018B  201C               	fcall	_send
  1363                           
  1364                           ;uart.c: 69:     send('=');
  1365     018C  303D               	movlw	61
  1366     018D  201C               	fcall	_send
  1367                           
  1368                           ;uart.c: 70:     switch(state) {
  1369     018E  29A3               	goto	i1l977
  1370     018F                     i1l965:
  1371                           
  1372                           ;uart.c: 72:             send('1');
  1373     018F  3031               	movlw	49
  1374     0190  201C               	fcall	_send
  1375                           
  1376                           ;uart.c: 73:             break;
  1377     0191  29B5               	goto	i1l979
  1378     0192                     i1l967:
  1379                           
  1380                           ;uart.c: 75:             send('2');
  1381     0192  3032               	movlw	50
  1382     0193  201C               	fcall	_send
  1383                           
  1384                           ;uart.c: 76:             break;
  1385     0194  29B5               	goto	i1l979
  1386     0195                     i1l969:
  1387                           
  1388                           ;uart.c: 78:             send('4');
  1389     0195  3034               	movlw	52
  1390     0196  201C               	fcall	_send
  1391                           
  1392                           ;uart.c: 79:             break;
  1393     0197  29B5               	goto	i1l979
  1394     0198                     i1l971:
  1395                           
  1396                           ;uart.c: 81:             send('8');
  1397     0198  3038               	movlw	56
  1398     0199  201C               	fcall	_send
  1399                           
  1400                           ;uart.c: 82:             break;
  1401     019A  29B5               	goto	i1l979
  1402     019B                     i1l973:
  1403                           
  1404                           ;uart.c: 84:             send('1');
  1405     019B  3031               	movlw	49
  1406     019C  201C               	fcall	_send
  1407                           
  1408                           ;uart.c: 85:             send('6');
  1409     019D  3036               	movlw	54
  1410     019E  201C               	fcall	_send
  1411                           
  1412                           ;uart.c: 86:             break;
  1413     019F  29B5               	goto	i1l979
  1414     01A0                     i1l975:
  1415                           
  1416                           ;uart.c: 88:             send('0');
  1417     01A0  3030               	movlw	48
  1418     01A1  201C               	fcall	_send
  1419                           
  1420                           ;uart.c: 89:     }
  1421     01A2  29B5               	goto	i1l979
  1422     01A3                     i1l977:
  1423     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1424     01A4  0828               	movf	_state,w
  1425                           
  1426                           ; Switch size 1, requested type "simple"
  1427                           ; Number of cases is 5, Range of values is 1 to 5
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; direct_byte           14     9 (fixed)
  1431                           ; simple_byte           16     9 (average)
  1432                           ; jumptable            263     9 (fixed)
  1433                           ;	Chosen strategy is simple_byte
  1434     01A5  3A01               	xorlw	1	; case 1
  1435     01A6  1903               	skipnz
  1436     01A7  298F               	goto	i1l965
  1437     01A8  3A03               	xorlw	3	; case 2
  1438     01A9  1903               	skipnz
  1439     01AA  2992               	goto	i1l967
  1440     01AB  3A01               	xorlw	1	; case 3
  1441     01AC  1903               	skipnz
  1442     01AD  2995               	goto	i1l969
  1443     01AE  3A07               	xorlw	7	; case 4
  1444     01AF  1903               	skipnz
  1445     01B0  2998               	goto	i1l971
  1446     01B1  3A01               	xorlw	1	; case 5
  1447     01B2  1903               	skipnz
  1448     01B3  299B               	goto	i1l973
  1449     01B4  29A0               	goto	i1l975
  1450     01B5                     i1l979:
  1451                           
  1452                           ;uart.c: 90:     send('K');
  1453     01B5  304B               	movlw	75
  1454     01B6  201C               	fcall	_send
  1455                           
  1456                           ;uart.c: 91:     send('H');
  1457     01B7  3048               	movlw	72
  1458     01B8  201C               	fcall	_send
  1459                           
  1460                           ;uart.c: 92:     send('z');
  1461     01B9  307A               	movlw	122
  1462     01BA  201C               	fcall	_send
  1463                           
  1464                           ;uart.c: 93:     send(13);
  1465     01BB  300D               	movlw	13
  1466     01BC  201C               	fcall	_send
  1467     01BD                     i1l30:
  1468     01BD  0008               	return
  1469     01BE                     __end_of_TX_frec:
  1470                           
  1471                           	psect	text8
  1472     001C                     __ptext8:	
  1473 ;; *************** function _send *****************
  1474 ;; Defined at:
  1475 ;;		line 20 in file "uart.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  ch              1    wreg     unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  ch              1    1[BANK0 ] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0
  1489 ;;      Params:         0       0
  1490 ;;      Locals:         0       1
  1491 ;;      Temps:          0       1
  1492 ;;      Totals:         0       2
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_TX_frec
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502     001C                     _send:	
  1503                           ;psect for function _send
  1504                           
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in _send: [wreg]
  1508                           ;send@ch stored from wreg
  1509     001C  1283               	bcf	3,5	;RP0=0, select bank0
  1510     001D  00AA               	movwf	send@ch
  1511     001E                     i1l919:
  1512                           
  1513                           ;uart.c: 21:     datosend.byte = ch;
  1514     001E  082A               	movf	send@ch,w
  1515     001F  00A7               	movwf	_datosend
  1516     0020                     i1l921:
  1517                           
  1518                           ;uart.c: 22:      GPIO4 =LOW;
  1519     0020  1205               	bcf	5,4	;volatile
  1520                           
  1521                           ;uart.c: 23:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1522     0021  3021               	movlw	33
  1523     0022  00A9               	movwf	??_send
  1524     0023                     u103_27:
  1525     0023  0BA9               	decfsz	??_send,f
  1526     0024  2823               	goto	u103_27
  1527     0025                     i1l923:
  1528                           
  1529                           ;uart.c: 24:      GPIO4 =(__bit)datosend.bit0;
  1530     0025  1283               	bcf	3,5	;RP0=0, select bank0
  1531     0026  1827               	btfsc	_datosend,0
  1532     0027  2829               	goto	u45_21
  1533     0028  282C               	goto	u45_20
  1534     0029                     u45_21:
  1535     0029  1283               	bcf	3,5	;RP0=0, select bank0
  1536     002A  1605               	bsf	5,4	;volatile
  1537     002B  282E               	goto	u46_24
  1538     002C                     u45_20:
  1539     002C  1283               	bcf	3,5	;RP0=0, select bank0
  1540     002D  1205               	bcf	5,4	;volatile
  1541     002E                     u46_24:
  1542                           
  1543                           ;uart.c: 25:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1544     002E  3021               	movlw	33
  1545     002F  00A9               	movwf	??_send
  1546     0030                     u104_27:
  1547     0030  0BA9               	decfsz	??_send,f
  1548     0031  2830               	goto	u104_27
  1549     0032                     i1l925:
  1550                           
  1551                           ;uart.c: 26:      GPIO4 =(__bit)datosend.bit1;
  1552     0032  1283               	bcf	3,5	;RP0=0, select bank0
  1553     0033  18A7               	btfsc	_datosend,1
  1554     0034  2836               	goto	u47_21
  1555     0035  2839               	goto	u47_20
  1556     0036                     u47_21:
  1557     0036  1283               	bcf	3,5	;RP0=0, select bank0
  1558     0037  1605               	bsf	5,4	;volatile
  1559     0038  283B               	goto	u48_24
  1560     0039                     u47_20:
  1561     0039  1283               	bcf	3,5	;RP0=0, select bank0
  1562     003A  1205               	bcf	5,4	;volatile
  1563     003B                     u48_24:
  1564                           
  1565                           ;uart.c: 27:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1566     003B  3021               	movlw	33
  1567     003C  00A9               	movwf	??_send
  1568     003D                     u105_27:
  1569     003D  0BA9               	decfsz	??_send,f
  1570     003E  283D               	goto	u105_27
  1571     003F                     i1l927:
  1572                           
  1573                           ;uart.c: 28:      GPIO4 =(__bit)datosend.bit2;
  1574     003F  1283               	bcf	3,5	;RP0=0, select bank0
  1575     0040  1927               	btfsc	_datosend,2
  1576     0041  2843               	goto	u49_21
  1577     0042  2846               	goto	u49_20
  1578     0043                     u49_21:
  1579     0043  1283               	bcf	3,5	;RP0=0, select bank0
  1580     0044  1605               	bsf	5,4	;volatile
  1581     0045  2848               	goto	u50_24
  1582     0046                     u49_20:
  1583     0046  1283               	bcf	3,5	;RP0=0, select bank0
  1584     0047  1205               	bcf	5,4	;volatile
  1585     0048                     u50_24:
  1586                           
  1587                           ;uart.c: 29:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1588     0048  3021               	movlw	33
  1589     0049  00A9               	movwf	??_send
  1590     004A                     u106_27:
  1591     004A  0BA9               	decfsz	??_send,f
  1592     004B  284A               	goto	u106_27
  1593     004C                     i1l929:
  1594                           
  1595                           ;uart.c: 30:      GPIO4 =(__bit)datosend.bit3;
  1596     004C  1283               	bcf	3,5	;RP0=0, select bank0
  1597     004D  19A7               	btfsc	_datosend,3
  1598     004E  2850               	goto	u51_21
  1599     004F  2853               	goto	u51_20
  1600     0050                     u51_21:
  1601     0050  1283               	bcf	3,5	;RP0=0, select bank0
  1602     0051  1605               	bsf	5,4	;volatile
  1603     0052  2855               	goto	u52_24
  1604     0053                     u51_20:
  1605     0053  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0054  1205               	bcf	5,4	;volatile
  1607     0055                     u52_24:
  1608                           
  1609                           ;uart.c: 31:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1610     0055  3021               	movlw	33
  1611     0056  00A9               	movwf	??_send
  1612     0057                     u107_27:
  1613     0057  0BA9               	decfsz	??_send,f
  1614     0058  2857               	goto	u107_27
  1615     0059                     i1l931:
  1616                           
  1617                           ;uart.c: 32:      GPIO4 =(__bit)datosend.bit4;
  1618     0059  1283               	bcf	3,5	;RP0=0, select bank0
  1619     005A  1A27               	btfsc	_datosend,4
  1620     005B  285D               	goto	u53_21
  1621     005C  2860               	goto	u53_20
  1622     005D                     u53_21:
  1623     005D  1283               	bcf	3,5	;RP0=0, select bank0
  1624     005E  1605               	bsf	5,4	;volatile
  1625     005F  2862               	goto	u54_24
  1626     0060                     u53_20:
  1627     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1628     0061  1205               	bcf	5,4	;volatile
  1629     0062                     u54_24:
  1630                           
  1631                           ;uart.c: 33:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1632     0062  3021               	movlw	33
  1633     0063  00A9               	movwf	??_send
  1634     0064                     u108_27:
  1635     0064  0BA9               	decfsz	??_send,f
  1636     0065  2864               	goto	u108_27
  1637     0066                     i1l933:
  1638                           
  1639                           ;uart.c: 34:      GPIO4 =(__bit)datosend.bit5;
  1640     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1641     0067  1AA7               	btfsc	_datosend,5
  1642     0068  286A               	goto	u55_21
  1643     0069  286D               	goto	u55_20
  1644     006A                     u55_21:
  1645     006A  1283               	bcf	3,5	;RP0=0, select bank0
  1646     006B  1605               	bsf	5,4	;volatile
  1647     006C  286F               	goto	u56_24
  1648     006D                     u55_20:
  1649     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1650     006E  1205               	bcf	5,4	;volatile
  1651     006F                     u56_24:
  1652                           
  1653                           ;uart.c: 35:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1654     006F  3021               	movlw	33
  1655     0070  00A9               	movwf	??_send
  1656     0071                     u109_27:
  1657     0071  0BA9               	decfsz	??_send,f
  1658     0072  2871               	goto	u109_27
  1659     0073                     i1l935:
  1660                           
  1661                           ;uart.c: 36:      GPIO4 =(__bit)datosend.bit6;
  1662     0073  1283               	bcf	3,5	;RP0=0, select bank0
  1663     0074  1B27               	btfsc	_datosend,6
  1664     0075  2877               	goto	u57_21
  1665     0076  287A               	goto	u57_20
  1666     0077                     u57_21:
  1667     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1668     0078  1605               	bsf	5,4	;volatile
  1669     0079  287C               	goto	u58_24
  1670     007A                     u57_20:
  1671     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1672     007B  1205               	bcf	5,4	;volatile
  1673     007C                     u58_24:
  1674                           
  1675                           ;uart.c: 37:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1676     007C  3021               	movlw	33
  1677     007D  00A9               	movwf	??_send
  1678     007E                     u110_27:
  1679     007E  0BA9               	decfsz	??_send,f
  1680     007F  287E               	goto	u110_27
  1681     0080                     i1l937:
  1682                           
  1683                           ;uart.c: 38:      GPIO4 =(__bit)datosend.bit7;
  1684     0080  1283               	bcf	3,5	;RP0=0, select bank0
  1685     0081  1BA7               	btfsc	_datosend,7
  1686     0082  2884               	goto	u59_21
  1687     0083  2887               	goto	u59_20
  1688     0084                     u59_21:
  1689     0084  1283               	bcf	3,5	;RP0=0, select bank0
  1690     0085  1605               	bsf	5,4	;volatile
  1691     0086  2889               	goto	u60_24
  1692     0087                     u59_20:
  1693     0087  1283               	bcf	3,5	;RP0=0, select bank0
  1694     0088  1205               	bcf	5,4	;volatile
  1695     0089                     u60_24:
  1696                           
  1697                           ;uart.c: 39:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1698     0089  3021               	movlw	33
  1699     008A  00A9               	movwf	??_send
  1700     008B                     u111_27:
  1701     008B  0BA9               	decfsz	??_send,f
  1702     008C  288B               	goto	u111_27
  1703     008D                     i1l939:
  1704                           
  1705                           ;uart.c: 40:      GPIO4 =HIGH;
  1706     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1707     008E  1605               	bsf	5,4	;volatile
  1708     008F                     i1l15:
  1709     008F  0008               	return
  1710     0090                     __end_of_send:
  1711     005E                     btemp	set	94	;btemp
  1712     005E                     wtemp0	set	94
  1713                           
  1714                           	psect	config
  1715                           
  1716                           ;Config register CONFIG @ 0x2007
  1717                           ;	Oscillator Selection bits
  1718                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1719                           ;	Watchdog Timer Enable bit
  1720                           ;	WDTE = OFF, WDT disabled
  1721                           ;	Power-Up Timer Enable bit
  1722                           ;	PWRTE = OFF, PWRT disabled
  1723                           ;	GP3/MCLR pin function select
  1724                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1725                           ;	Brown-out Detect Enable bit
  1726                           ;	BOREN = ON, BOD enabled
  1727                           ;	Code Protection bit
  1728                           ;	CP = OFF, Program Memory code protection is disabled
  1729                           ;	Data Code Protection bit
  1730                           ;	CPD = OFF, Data memory code protection is disabled
  1731     2007                     	org	8199
  1732     2007  31D4               	dw	12756

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      16

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _TX_frec->_send

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0      22
                                              2 BANK0      4     4      0
                            _TX_frec
                              _blink
                             _button
                         _one_minute
                            _recieve
 ---------------------------------------------------------------------------------
 (3) _recieve                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _one_minute                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _button                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _blink                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TX_frec                                              0     0      0      22
                               _send
 ---------------------------------------------------------------------------------
 (4) _send                                                 2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _ISR (ROOT)
   _TX_frec
     _send
   _blink
   _button
   _one_minute
   _recieve

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      7      10       4       25.8%
ABS                  0      0      10       5        0.0%
DATA                 0      0      10       6        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 22 16:56:39 2024

                     l74 014B                      l139 020A                      _GIE 005F  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    _ISR 01BE                      _PSA 040B                      u907 0159  
                    u917 0160                      u927 0168                      u937 016F  
                    u897 0151                      fsr0 0004                     ?_ISR 0029  
                   l1111 0155                     l1041 01F4                     l1113 015C  
                   l1121 0174                     l1051 01FA                     l1043 01F5  
                   l1115 0164                     l1107 0149                     l1061 0200  
                   l1053 01FB                     l1045 01F7                     l1037 01EF  
                   l1117 016B                     l1109 014D                     l1071 0206  
                   l1063 0201                     l1055 01FD                     l1047 01F8  
                   l1039 01F2                     l1119 0173                     l1073 0207  
                   l1065 0202                     l1057 01FE                     l1049 01F9  
                   l1075 0208                     l1067 0203                     l1059 01FF  
                   l1077 0209                     l1069 0205                     _T0IE 005D  
                   _T0IF 005A                     _T0CS 040D                     _IOC0 04B0  
                   _IOC1 04B1                     _IOC2 04B2                     _IOC3 04B3  
                   _IOC4 04B4                     _IOC5 04B5                     _GPIE 005B  
                   _GPIO 0005                     _PEIE 005E                     _INTE 005C  
                   i1l30 01BD                     _INTF 0059                     i1l15 008F  
                   i1l19 0148                     i1l67 01E4                     _TMR0 0001  
                   _dato 0026                     _main 0149                     _init 01EF  
                   _send 001C                     btemp 005E                     start 000F  
        __end_of_TX_frec 01BE                    ??_ISR 002B                    ?_main 0029  
                  ?_init 0029                    ?_send 0029                    _GPIO1 0029  
                  _GPIO2 002A                    _GPIO3 002B                    _GPIO4 002C  
                  _GPIO5 002D                    i1l144 022E                    i1l146 022F  
                  i1l154 00C0                    i1l171 0222                    i1l164 00EF  
                  i1l921 0020                    i1l931 0059                    i1l923 0025  
                  i1l933 0066                    i1l925 0032                    i1l941 00F0  
                  i1l935 0073                    i1l927 003F                    i1l919 001E  
                  i1l951 011D                    i1l943 00F5                    i1l937 0080  
                  i1l929 004C                    i1l961 0147                    i1l953 0127  
                  i1l945 00FF                    i1l939 008D                    i1l971 0198  
                  i1l963 018A                    i1l955 0131                    i1l947 0109  
                  i1l973 019B                    i1l965 018F                    i1l981 0223  
                  i1l957 013B                    i1l949 0113                    i1l975 01A0  
                  i1l967 0192                    i1l983 022A                    i1l991 009A  
                  i1l959 0140                    i1l969 0195                    i1l977 01A3  
                  i1l985 022C                    i1l993 00A1                    i1l979 01B5  
                  i1l995 00A6                    i1l987 0090                    i1l997 00AA  
                  i1l989 0095                    i1l999 00AC                    u50_24 0048  
                  u51_20 0053                    u51_21 0050                    u60_24 0089  
                  u52_24 0055                    u53_20 0060                    u45_20 002C  
                  u53_21 005D                    u45_21 0029                    u61_25 00FA  
                  u70_20 022A                    u70_21 0229                    u54_24 0062  
                  u46_24 002E                    u62_25 0104                    u55_20 006D  
                  u47_20 0039                    u71_20 0095                    u55_21 006A  
                  u47_21 0036                    u71_21 0094                    u63_25 010E  
                  u80_20 00CF                    u72_20 00A1                    u80_21 00CE  
                  u72_21 00A0                    u56_24 006F                    u48_24 003B  
                  u64_25 0118                    u57_20 007A                    u49_20 0046  
                  u81_20 00DB                    u73_20 00A6                    u57_21 0077  
                  u49_21 0043                    u81_21 00DA                    u73_21 00A5  
                  u65_25 0122                    u82_20 00E1                    u74_20 00AA  
                  u82_21 00E0                    u74_21 00A9                    u58_24 007C  
                  u66_25 012C                    u59_20 0087                    u75_20 00B6  
                  u83_20 021B                    u59_21 0084                    u75_21 00B5  
                  u83_21 021A                    u67_25 0136                    u76_20 00BB  
                  u84_20 0220                    u76_21 00BA                    u84_21 021F  
                  u68_25 0140                    u77_20 00BF                    u69_20 0147  
                  u85_20 01C3                    u77_21 00BE                    u69_21 0146  
                  u85_21 01C2                    u78_20 00C4                    u86_20 01C8  
                  u78_21 00C3                    u86_21 01C7                    u94_27 00F3  
                  u79_20 00CB                    u87_20 01CF                    u79_21 00CA  
                  u87_21 01CE                    u95_27 00FD                    u88_20 01D7  
                  u88_21 01D6                    u96_27 0107                    u97_27 0111  
                  u98_27 011B                    u99_27 0125                    _blink 0223  
        __end_of_recieve 0149                    _state 0028                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 0010  
           __end_of_main 018A             __end_of_init 020B             __end_of_send 0090  
                 ??_main 002F                   ??_init 0000                   ??_send 0029  
                 ?_blink 0029                   u100_27 012F                   i1l1001 00B0  
                 i1l1003 00B6                   i1l1011 00C5                   i1l1021 00E1  
                 i1l1013 00CB                   i1l1005 00BB                   i1l1101 01DD  
                 i1l1023 00E4                   i1l1015 00CF                   i1l1007 00BF  
                 i1l1031 021B                   u101_27 0139                   i1l1103 01E1  
                 i1l1025 00E8                   i1l1017 00D5                   i1l1009 00C4  
                 i1l1033 021C                   i1l1105 01E3                   i1l1019 00DB  
                 i1l1027 00ED                   i1l1035 0220                   i1l1029 020B  
                 u110_27 007E                   u102_27 0097                   i1l1081 01C3  
                 i1l1091 01D0                   i1l1083 01C8                   i1l1093 01D7  
                 i1l1085 01C9                   u111_27 008B                   u103_27 0023  
                 i1l1095 01D8                   i1l1087 01CB                   i1l1079 01BE  
                 i1l1097 01DA                   i1l1089 01CF                   i1l1099 01DB  
                 u104_27 0030                   u105_27 003D                   u106_27 004A  
                 u107_27 0057                   u108_27 0064                   u109_27 0071  
                 _TRISIO 0085                ??_TX_frec 0000              button@count 0022  
                 _button 0090                   send@ch 002A                ??_recieve 0029  
                 saved_w 005E  __end_of__initialization 001A           __pcstackCOMMON 0000  
          __end_of_blink 0230              ISR@contador 0025                  ??_blink 0000  
             __pbssBANK0 0020               __pmaintext 0149               __pintentry 0004  
                ?_button 0029          one_minute@count 0020                  _TX_frec 018A  
                __ptext1 01EF                  __ptext2 01BE                  __ptext3 00F0  
                __ptext4 020B                  __ptext5 0090                  __ptext6 0223  
                __ptext7 018A                  __ptext8 001C                  _recieve 00F0  
                blink@sp 0024               _one_minute 020B     end_of_initialization 001A  
         __end_of_button 00F0      start_initialization 0010              __end_of_ISR 01EF  
            ?_one_minute 0029                 ??_button 0029                ___latbits 0000  
          __pcstackBANK0 0029                 ?_TX_frec 0029                 ?_recieve 0029  
      interrupt_function 0004                 _datosend 0027             ??_one_minute 0000  
     __end_of_one_minute 0223                 intlevel1 0000  
