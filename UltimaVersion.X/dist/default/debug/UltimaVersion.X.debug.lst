

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 22 16:21:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	12F629
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x5E,2
    19     0000                     
    20                           ; Generated 17/08/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC12F629 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0019                     	;# 
    68     0081                     	;# 
    69     0085                     	;# 
    70     008C                     	;# 
    71     008E                     	;# 
    72     0090                     	;# 
    73     0095                     	;# 
    74     0096                     	;# 
    75     0096                     	;# 
    76     0099                     	;# 
    77     009A                     	;# 
    78     009A                     	;# 
    79     009B                     	;# 
    80     009C                     	;# 
    81     009D                     	;# 
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0019                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     008C                     	;# 
    99     008E                     	;# 
   100     0090                     	;# 
   101     0095                     	;# 
   102     0096                     	;# 
   103     0096                     	;# 
   104     0099                     	;# 
   105     009A                     	;# 
   106     009A                     	;# 
   107     009B                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0019                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     008C                     	;# 
   127     008E                     	;# 
   128     0090                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0096                     	;# 
   132     0099                     	;# 
   133     009A                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0019                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     008C                     	;# 
   155     008E                     	;# 
   156     0090                     	;# 
   157     0095                     	;# 
   158     0096                     	;# 
   159     0096                     	;# 
   160     0099                     	;# 
   161     009A                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     0005                     _GPIO	set	5
   167     0001                     _TMR0	set	1
   168     002B                     _GPIO3	set	43
   169     0058                     _GPIF	set	88
   170     005B                     _GPIE	set	91
   171     005E                     _PEIE	set	94
   172     005C                     _INTE	set	92
   173     005F                     _GIE	set	95
   174     005D                     _T0IE	set	93
   175     002D                     _GPIO5	set	45
   176     005A                     _T0IF	set	90
   177     002A                     _GPIO2	set	42
   178     0059                     _INTF	set	89
   179     0029                     _GPIO1	set	41
   180     002C                     _GPIO4	set	44
   181     0085                     _TRISIO	set	133
   182     04B5                     _IOC5	set	1205
   183     04B4                     _IOC4	set	1204
   184     04B3                     _IOC3	set	1203
   185     04B2                     _IOC2	set	1202
   186     04B1                     _IOC1	set	1201
   187     04B0                     _IOC0	set	1200
   188     040E                     _INTEDG	set	1038
   189     0408                     _PS0	set	1032
   190     0409                     _PS1	set	1033
   191     040A                     _PS2	set	1034
   192     040B                     _PSA	set	1035
   193     040D                     _T0CS	set	1037
   194                           
   195                           	psect	cinit
   196     0010                     start_initialization:	
   197                           ; #config settings
   198                           
   199     0010                     __initialization:
   200                           
   201                           ; Clear objects allocated to BANK0
   202     0010  1283               	bcf	3,5	;RP0=0, select bank0
   203     0011  01A0               	clrf	__pbssBANK0& (0+127)
   204     0012  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   205     0013  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   206     0014  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   207     0015  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   208     0016  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   209     0017  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   210     0018  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   211     0019  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   212     001A                     end_of_initialization:	
   213                           ;End of C runtime variable initialization code
   214                           
   215     001A                     __end_of__initialization:
   216     001A  0183               	clrf	3
   217     001B  28F0               	ljmp	_main	;jump to C main() function
   218                           
   219                           	psect	bssBANK0
   220     0020                     __pbssBANK0:
   221     0020                     one_minute@count:
   222     0020                     	ds	2
   223     0022                     button@count:
   224     0022                     	ds	2
   225     0024                     blink@sp:
   226     0024                     	ds	1
   227     0025                     ISR@contador:
   228     0025                     	ds	1
   229     0026                     _dato:
   230     0026                     	ds	1
   231     0027                     _datosend:
   232     0027                     	ds	1
   233     0028                     _state:
   234     0028                     	ds	1
   235                           
   236                           	psect	cstackCOMMON
   237     0000                     __pcstackCOMMON:
   238     0000                     ??_blink:
   239     0000                     ??_one_minute:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0000                     ??_init:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0000                     ??_TX_frec:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           	psect	cstackBANK0
   250     0029                     __pcstackBANK0:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0029                     ?_blink:
   254     0029                     ?_button:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0029                     ??_button:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0029                     ?_one_minute:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0029                     ?_init:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0029                     ?_send:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0029                     ??_send:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0029                     ?_TX_frec:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0029                     ?_ISR:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0029                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283     0029                     	ds	1
   284     002A                     send@ch:
   285                           
   286                           ; 1 bytes @ 0x1
   287     002A                     	ds	1
   288     002B                     ??_ISR:
   289                           
   290                           ; 1 bytes @ 0x2
   291     002B                     	ds	4
   292     002F                     ??_main:
   293                           
   294                           ; 1 bytes @ 0x6
   295     002F                     	ds	1
   296                           
   297                           	psect	maintext
   298     00F0                     __pmaintext:	
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 40 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : B00/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0
   318 ;;      Params:         0       0
   319 ;;      Locals:         0       0
   320 ;;      Temps:          0       1
   321 ;;      Totals:         0       1
   322 ;;Total ram usage:        1 bytes
   323 ;; Hardware stack levels required when called: 4
   324 ;; This function calls:
   325 ;;		_init
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331     00F0                     _main:	
   332                           ;psect for function _main
   333                           
   334     00F0                     l1083:	
   335                           ;incstack = 0
   336                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   337                           
   338                           
   339                           ;main.c: 41:     init();
   340     00F0  218E               	fcall	_init
   341     00F1  291B               	goto	l1097
   342     00F2                     l72:	
   343                           ;main.c: 44:             case ESPERA:
   344                           
   345                           
   346                           ;main.c: 45:                 GPIO5 = 0;
   347     00F2  1285               	bcf	5,5	;volatile
   348                           
   349                           ;main.c: 46:                 break;
   350     00F3  291B               	goto	l1097
   351     00F4                     l1085:
   352                           
   353                           ;main.c: 48:                 GPIO5 ^= 1;
   354     00F4  3020               	movlw	32
   355     00F5  0685               	xorwf	5,f
   356                           
   357                           ;main.c: 49:                 _delay((unsigned long)((32*16)*(4000000/4000000.0)));
   358     00F6  30AA               	movlw	170
   359     00F7  00AF               	movwf	??_main
   360     00F8                     u787:
   361     00F8  0BAF               	decfsz	??_main,f
   362     00F9  28F8               	goto	u787
   363     00FA  0000               	nop
   364                           
   365                           ;main.c: 50:                 break;
   366     00FB  291B               	goto	l1097
   367     00FC                     l1087:
   368                           
   369                           ;main.c: 52:                 GPIO5 ^= 1;
   370     00FC  3020               	movlw	32
   371     00FD  0685               	xorwf	5,f
   372                           
   373                           ;main.c: 53:                 _delay((unsigned long)((32*8)*(4000000/4000000.0)));
   374     00FE  3055               	movlw	85
   375     00FF  00AF               	movwf	??_main
   376     0100                     u797:
   377     0100  0BAF               	decfsz	??_main,f
   378     0101  2900               	goto	u797
   379                           
   380                           ;main.c: 54:             break;
   381     0102  291B               	goto	l1097
   382     0103                     l1089:
   383                           
   384                           ;main.c: 56:                 GPIO5 ^= 1;
   385     0103  3020               	movlw	32
   386     0104  0685               	xorwf	5,f
   387                           
   388                           ;main.c: 57:                 _delay((unsigned long)((32*4)*(4000000/4000000.0)));
   389     0105  302A               	movlw	42
   390     0106  00AF               	movwf	??_main
   391     0107                     u807:
   392     0107  0BAF               	decfsz	??_main,f
   393     0108  2907               	goto	u807
   394     0109  0000               	nop
   395                           
   396                           ;main.c: 58:                break;
   397     010A  291B               	goto	l1097
   398     010B                     l1091:
   399                           
   400                           ;main.c: 60:                 GPIO5 ^= 1;
   401     010B  3020               	movlw	32
   402     010C  0685               	xorwf	5,f
   403                           
   404                           ;main.c: 61:                 _delay((unsigned long)((32*2)*(4000000/4000000.0)));
   405     010D  3015               	movlw	21
   406     010E  00AF               	movwf	??_main
   407     010F                     u817:
   408     010F  0BAF               	decfsz	??_main,f
   409     0110  290F               	goto	u817
   410                           
   411                           ;main.c: 62:                 break;
   412     0111  291B               	goto	l1097
   413     0112                     l1093:
   414                           
   415                           ;main.c: 64:                 GPIO5 ^= 1;
   416     0112  3020               	movlw	32
   417     0113  0685               	xorwf	5,f
   418                           
   419                           ;main.c: 65:                 _delay((unsigned long)((32)*(4000000/4000000.0)));
   420     0114  300A               	movlw	10
   421     0115  00AF               	movwf	??_main
   422     0116                     u827:
   423     0116  0BAF               	decfsz	??_main,f
   424     0117  2916               	goto	u827
   425     0118  0000               	nop
   426                           
   427                           ;main.c: 66:                 break;
   428     0119  291B               	goto	l1097
   429     011A                     l1095:
   430     011A  01A8               	clrf	_state
   431     011B                     l1097:
   432     011B  1283               	bcf	3,5	;RP0=0, select bank0
   433     011C  0828               	movf	_state,w
   434                           
   435                           ; Switch size 1, requested type "simple"
   436                           ; Number of cases is 6, Range of values is 0 to 5
   437                           ; switch strategies available:
   438                           ; Name         Instructions Cycles
   439                           ; direct_byte           12     6 (fixed)
   440                           ; simple_byte           19    10 (average)
   441                           ; jumptable            260     6 (fixed)
   442                           ;	Chosen strategy is simple_byte
   443     011D  3A00               	xorlw	0	; case 0
   444     011E  1903               	skipnz
   445     011F  28F2               	goto	l72
   446     0120  3A01               	xorlw	1	; case 1
   447     0121  1903               	skipnz
   448     0122  28F4               	goto	l1085
   449     0123  3A03               	xorlw	3	; case 2
   450     0124  1903               	skipnz
   451     0125  28FC               	goto	l1087
   452     0126  3A01               	xorlw	1	; case 3
   453     0127  1903               	skipnz
   454     0128  2903               	goto	l1089
   455     0129  3A07               	xorlw	7	; case 4
   456     012A  1903               	skipnz
   457     012B  290B               	goto	l1091
   458     012C  3A01               	xorlw	1	; case 5
   459     012D  1903               	skipnz
   460     012E  2912               	goto	l1093
   461     012F  291A               	goto	l1095
   462     0130  280F               	ljmp	start
   463     0131                     __end_of_main:
   464                           
   465                           	psect	text1
   466     018E                     __ptext1:	
   467 ;; *************** function _init *****************
   468 ;; Defined at:
   469 ;;		line 4 in file "funtions.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0
   483 ;;      Params:         0       0
   484 ;;      Locals:         0       0
   485 ;;      Temps:          0       0
   486 ;;      Totals:         0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; Hardware stack levels required when called: 3
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497     018E                     _init:	
   498                           ;psect for function _init
   499                           
   500     018E                     l1015:	
   501                           ;incstack = 0
   502                           ; Regs used in _init: [wreg+status,2]
   503                           
   504                           
   505                           ;funtions.c: 5:     TRISIO = 0b00001010;
   506     018E  300A               	movlw	10
   507     018F  1683               	bsf	3,5	;RP0=1, select bank1
   508     0190  0085               	movwf	5	;volatile
   509     0191                     l1017:
   510                           
   511                           ;funtions.c: 6:     GPIO = 0;
   512     0191  1283               	bcf	3,5	;RP0=0, select bank0
   513     0192  0185               	clrf	5	;volatile
   514     0193                     l1019:
   515                           
   516                           ;funtions.c: 7:     GPIO4 = HIGH;
   517     0193  1605               	bsf	5,4	;volatile
   518     0194                     l1021:
   519                           
   520                           ;funtions.c: 9:     T0CS = 0;
   521     0194  1683               	bsf	3,5	;RP0=1, select bank1
   522     0195  1281               	bcf	1,5	;volatile
   523     0196                     l1023:
   524                           
   525                           ;funtions.c: 10:     PSA = 0;
   526     0196  1181               	bcf	1,3	;volatile
   527     0197                     l1025:
   528                           
   529                           ;funtions.c: 11:     PS2 =1;
   530     0197  1501               	bsf	1,2	;volatile
   531     0198                     l1027:
   532                           
   533                           ;funtions.c: 12:     PS1 = 1;
   534     0198  1481               	bsf	1,1	;volatile
   535     0199                     l1029:
   536                           
   537                           ;funtions.c: 13:     PS0 = 1;
   538     0199  1401               	bsf	1,0	;volatile
   539     019A                     l1031:
   540                           
   541                           ;funtions.c: 15:     TMR0 =0;
   542     019A  1283               	bcf	3,5	;RP0=0, select bank0
   543     019B  0181               	clrf	1	;volatile
   544     019C                     l1033:
   545                           
   546                           ;funtions.c: 16:     T0IE = 1;
   547     019C  168B               	bsf	11,5	;volatile
   548     019D                     l1035:
   549                           
   550                           ;funtions.c: 18:     GIE = 1;
   551     019D  178B               	bsf	11,7	;volatile
   552     019E                     l1037:
   553                           
   554                           ;funtions.c: 19:     INTE = 1;
   555     019E  160B               	bsf	11,4	;volatile
   556     019F                     l1039:
   557                           
   558                           ;funtions.c: 20:     INTF = 0;
   559     019F  108B               	bcf	11,1	;volatile
   560     01A0                     l1041:
   561                           
   562                           ;funtions.c: 21:     PEIE=0;
   563     01A0  130B               	bcf	11,6	;volatile
   564     01A1                     l1043:
   565                           
   566                           ;funtions.c: 22:     GPIE = 1;
   567     01A1  158B               	bsf	11,3	;volatile
   568     01A2                     l1045:
   569                           
   570                           ;funtions.c: 23:     GPIF = 0;
   571     01A2  100B               	bcf	11,0	;volatile
   572     01A3                     l1047:
   573                           
   574                           ;funtions.c: 24:     INTEDG = 1;
   575     01A3  1683               	bsf	3,5	;RP0=1, select bank1
   576     01A4  1701               	bsf	1,6	;volatile
   577     01A5                     l1049:
   578                           
   579                           ;funtions.c: 27:     IOC0 = 0;
   580     01A5  1016               	bcf	22,0	;volatile
   581     01A6                     l1051:
   582                           
   583                           ;funtions.c: 28:     IOC1 = 1;
   584     01A6  1496               	bsf	22,1	;volatile
   585     01A7                     l1053:
   586                           
   587                           ;funtions.c: 29:     IOC2 = 0;
   588     01A7  1116               	bcf	22,2	;volatile
   589     01A8                     l1055:
   590                           
   591                           ;funtions.c: 30:     IOC3 = 0;
   592     01A8  1196               	bcf	22,3	;volatile
   593     01A9                     l1057:
   594                           
   595                           ;funtions.c: 31:     IOC4 = 0;
   596     01A9  1216               	bcf	22,4	;volatile
   597     01AA                     l1059:
   598                           
   599                           ;funtions.c: 32:     IOC5 = 0;
   600     01AA  1296               	bcf	22,5	;volatile
   601     01AB                     l141:
   602     01AB  0008               	return
   603     01AC                     __end_of_init:
   604                           
   605                           	psect	text2
   606     0165                     __ptext2:	
   607 ;; *************** function _ISR *****************
   608 ;; Defined at:
   609 ;;		line 4 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0
   623 ;;      Params:         0       0
   624 ;;      Locals:         0       0
   625 ;;      Temps:          0       4
   626 ;;      Totals:         0       4
   627 ;;Total ram usage:        4 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 2
   630 ;; This function calls:
   631 ;;		_TX_frec
   632 ;;		_blink
   633 ;;		_button
   634 ;;		_one_minute
   635 ;; This function is called by:
   636 ;;		Interrupt level 1
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640     0165                     _ISR:	
   641                           ;psect for function _ISR
   642                           
   643     0165                     i1l1061:
   644                           
   645                           ;main.c: 12:     if (INTF) {
   646     0165  1C8B               	btfss	11,1	;volatile
   647     0166  2968               	goto	u75_21
   648     0167  2969               	goto	u75_20
   649     0168                     u75_21:
   650     0168  296B               	goto	i1l59
   651     0169                     u75_20:
   652     0169                     i1l1063:
   653                           
   654                           ;main.c: 15:         GPIO2 = 1;
   655     0169  1505               	bsf	5,2	;volatile
   656                           
   657                           ;main.c: 17:         INTF = 0;
   658     016A  108B               	bcf	11,1	;volatile
   659     016B                     i1l59:	
   660                           ;main.c: 18:     }
   661                           
   662                           
   663                           ;main.c: 20:     if (T0IF) {
   664     016B  1D0B               	btfss	11,2	;volatile
   665     016C  296E               	goto	u76_21
   666     016D  296F               	goto	u76_20
   667     016E                     u76_21:
   668     016E  2984               	goto	i1l65
   669     016F                     u76_20:
   670     016F                     i1l1065:
   671                           
   672                           ;main.c: 21:          static char contador = 0;;main.c: 22:          blink();
   673     016F  21C4               	fcall	_blink
   674     0170                     i1l1067:
   675                           
   676                           ;main.c: 23:          if(contador >= 16){
   677     0170  3010               	movlw	16
   678     0171  1283               	bcf	3,5	;RP0=0, select bank0
   679     0172  0225               	subwf	ISR@contador,w
   680     0173  1C03               	skipc
   681     0174  2976               	goto	u77_21
   682     0175  2977               	goto	u77_20
   683     0176                     u77_21:
   684     0176  297D               	goto	i1l1077
   685     0177                     u77_20:
   686     0177                     i1l1069:
   687                           
   688                           ;main.c: 24:              TX_frec();
   689     0177  2131               	fcall	_TX_frec
   690     0178                     i1l1071:
   691                           
   692                           ;main.c: 25:              contador=0;
   693     0178  1283               	bcf	3,5	;RP0=0, select bank0
   694     0179  01A5               	clrf	ISR@contador
   695     017A                     i1l1073:
   696                           
   697                           ;main.c: 26:              button();
   698     017A  2090               	fcall	_button
   699     017B                     i1l1075:
   700                           
   701                           ;main.c: 27:              one_minute();
   702     017B  21AC               	fcall	_one_minute
   703                           
   704                           ;main.c: 28:          } else
   705     017C  2981               	goto	i1l1079
   706     017D                     i1l1077:
   707                           
   708                           ;main.c: 29:              contador++;
   709     017D  3001               	movlw	1
   710     017E  00DF               	movwf	btemp+1
   711     017F  085F               	movf	btemp+1,w
   712     0180  07A5               	addwf	ISR@contador,f
   713     0181                     i1l1079:
   714                           
   715                           ;main.c: 30:          TMR0 = 0;
   716     0181  1283               	bcf	3,5	;RP0=0, select bank0
   717     0182  0181               	clrf	1	;volatile
   718     0183                     i1l1081:
   719                           
   720                           ;main.c: 31:          T0IF=0;
   721     0183  110B               	bcf	11,2	;volatile
   722     0184                     i1l65:
   723     0184  082E               	movf	??_ISR+3,w
   724     0185  082D               	movf	??_ISR+2,w
   725     0186  008A               	movwf	10
   726     0187  082C               	movf	??_ISR+1,w
   727     0188  0084               	movwf	4
   728     0189  0E2B               	swapf	??_ISR,w
   729     018A  0083               	movwf	3
   730     018B  0EDE               	swapf	btemp,f
   731     018C  0E5E               	swapf	btemp,w
   732     018D  0009               	retfie
   733     018E                     __end_of_ISR:
   734                           
   735                           	psect	intentry
   736     0004                     __pintentry:	
   737                           ;incstack = 0
   738                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   739                           
   740     0004                     interrupt_function:
   741     005E                     saved_w	set	btemp
   742     0004  00DE               	movwf	btemp
   743     0005  0E03               	swapf	3,w
   744     0006  1283               	bcf	3,5	;RP0=0, select bank0
   745     0007  00AB               	movwf	??_ISR
   746     0008  0804               	movf	4,w
   747     0009  00AC               	movwf	??_ISR+1
   748     000A  080A               	movf	10,w
   749     000B  00AD               	movwf	??_ISR+2
   750     000C  085F               	movf	btemp+1,w
   751     000D  00AE               	movwf	??_ISR+3
   752     000E  2965               	ljmp	_ISR
   753                           
   754                           	psect	text3
   755     01AC                     __ptext3:	
   756 ;; *************** function _one_minute *****************
   757 ;; Defined at:
   758 ;;		line 73 in file "funtions.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0
   772 ;;      Params:         0       0
   773 ;;      Locals:         0       0
   774 ;;      Temps:          0       0
   775 ;;      Totals:         0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_ISR
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     01AC                     _one_minute:	
   786                           ;psect for function _one_minute
   787                           
   788     01AC                     i1l1007:	
   789                           ;incstack = 0
   790                           ; Regs used in _one_minute: [wreg+status,2]
   791                           
   792                           
   793                           ;funtions.c: 74:     static unsigned int count = 0;;funtions.c: 75:     count++;
   794     01AC  3001               	movlw	1
   795     01AD  1283               	bcf	3,5	;RP0=0, select bank0
   796     01AE  07A0               	addwf	one_minute@count,f
   797     01AF  1803               	skipnc
   798     01B0  0AA1               	incf	one_minute@count+1,f
   799     01B1  3000               	movlw	0
   800     01B2  07A1               	addwf	one_minute@count+1,f
   801                           
   802                           ;funtions.c: 76:     if (count >= 30)
   803     01B3  3000               	movlw	0
   804     01B4  0221               	subwf	one_minute@count+1,w
   805     01B5  301E               	movlw	30
   806     01B6  1903               	skipnz
   807     01B7  0220               	subwf	one_minute@count,w
   808     01B8  1C03               	skipc
   809     01B9  29BB               	goto	u73_21
   810     01BA  29BC               	goto	u73_20
   811     01BB                     u73_21:
   812     01BB  29BD               	goto	i1l1011
   813     01BC                     u73_20:
   814     01BC                     i1l1009:
   815                           
   816                           ;funtions.c: 77:         state=ESPERA;
   817     01BC  01A8               	clrf	_state
   818     01BD                     i1l1011:
   819                           
   820                           ;funtions.c: 78:     if ( GPIO3==1 )
   821     01BD  1D85               	btfss	5,3	;volatile
   822     01BE  29C0               	goto	u74_21
   823     01BF  29C1               	goto	u74_20
   824     01C0                     u74_21:
   825     01C0  29C3               	goto	i1l173
   826     01C1                     u74_20:
   827     01C1                     i1l1013:
   828                           
   829                           ;funtions.c: 79:         count=0;
   830     01C1  01A0               	clrf	one_minute@count
   831     01C2  01A1               	clrf	one_minute@count+1
   832     01C3                     i1l173:
   833     01C3  0008               	return
   834     01C4                     __end_of_one_minute:
   835                           
   836                           	psect	text4
   837     0090                     __ptext4:	
   838 ;; *************** function _button *****************
   839 ;; Defined at:
   840 ;;		line 46 in file "funtions.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0, btemp+1
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0
   854 ;;      Params:         0       0
   855 ;;      Locals:         0       0
   856 ;;      Temps:          0       1
   857 ;;      Totals:         0       1
   858 ;;Total ram usage:        1 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_ISR
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867     0090                     _button:	
   868                           ;psect for function _button
   869                           
   870     0090                     i1l965:	
   871                           ;incstack = 0
   872                           ; Regs used in _button: [wreg+status,2+status,0+btemp+1]
   873                           
   874                           
   875                           ;funtions.c: 47:     static unsigned int count = 0;;funtions.c: 49:     if(GPIO3==1){
   876     0090  1283               	bcf	3,5	;RP0=0, select bank0
   877     0091  1D85               	btfss	5,3	;volatile
   878     0092  2894               	goto	u61_21
   879     0093  2895               	goto	u61_20
   880     0094                     u61_21:
   881     0094  28ED               	goto	i1l1005
   882     0095                     u61_20:
   883     0095                     i1l967:
   884                           
   885                           ;funtions.c: 50:         _delay((unsigned long)((20)*(4000000/4000000.0)));
   886     0095  3006               	movlw	6
   887     0096  00A9               	movwf	??_button
   888     0097                     u83_27:
   889     0097  0BA9               	decfsz	??_button,f
   890     0098  2897               	goto	u83_27
   891     0099  0000               	nop
   892     009A                     i1l969:
   893                           
   894                           ;funtions.c: 52:         if(count==0 && state==ESPERA && (GPIO3==1) ){
   895     009A  1283               	bcf	3,5	;RP0=0, select bank0
   896     009B  0822               	movf	button@count,w
   897     009C  0423               	iorwf	button@count+1,w
   898     009D  1D03               	btfss	3,2
   899     009E  28A0               	goto	u62_21
   900     009F  28A1               	goto	u62_20
   901     00A0                     u62_21:
   902     00A0  28B0               	goto	i1l979
   903     00A1                     u62_20:
   904     00A1                     i1l971:
   905     00A1  0828               	movf	_state,w
   906     00A2  1D03               	btfss	3,2
   907     00A3  28A5               	goto	u63_21
   908     00A4  28A6               	goto	u63_20
   909     00A5                     u63_21:
   910     00A5  28B0               	goto	i1l979
   911     00A6                     u63_20:
   912     00A6                     i1l973:
   913     00A6  1D85               	btfss	5,3	;volatile
   914     00A7  28A9               	goto	u64_21
   915     00A8  28AA               	goto	u64_20
   916     00A9                     u64_21:
   917     00A9  28B0               	goto	i1l979
   918     00AA                     u64_20:
   919     00AA                     i1l975:
   920                           
   921                           ;funtions.c: 53:             state=F1K;
   922     00AA  01A8               	clrf	_state
   923     00AB  0AA8               	incf	_state,f
   924     00AC                     i1l977:
   925                           
   926                           ;funtions.c: 54:             count=1;}
   927     00AC  3001               	movlw	1
   928     00AD  00A2               	movwf	button@count
   929     00AE  3000               	movlw	0
   930     00AF  00A3               	movwf	button@count+1
   931     00B0                     i1l979:
   932                           
   933                           ;funtions.c: 56:         if(count==0 && (state!=ESPERA) && (GPIO3==1) ){
   934     00B0  0822               	movf	button@count,w
   935     00B1  0423               	iorwf	button@count+1,w
   936     00B2  1D03               	btfss	3,2
   937     00B3  28B5               	goto	u65_21
   938     00B4  28B6               	goto	u65_20
   939     00B5                     u65_21:
   940     00B5  28C5               	goto	i1l989
   941     00B6                     u65_20:
   942     00B6                     i1l981:
   943     00B6  0828               	movf	_state,w
   944     00B7  1903               	btfsc	3,2
   945     00B8  28BA               	goto	u66_21
   946     00B9  28BB               	goto	u66_20
   947     00BA                     u66_21:
   948     00BA  28C5               	goto	i1l989
   949     00BB                     u66_20:
   950     00BB                     i1l983:
   951     00BB  1D85               	btfss	5,3	;volatile
   952     00BC  28BE               	goto	u67_21
   953     00BD  28BF               	goto	u67_20
   954     00BE                     u67_21:
   955     00BE  28C5               	goto	i1l989
   956     00BF                     u67_20:
   957     00BF                     i1l985:
   958                           
   959                           ;funtions.c: 57:             GPIO5=LOW;
   960     00BF  1285               	bcf	5,5	;volatile
   961     00C0                     i1l156:	
   962                           ;funtions.c: 58:             while( GPIO3==1 ){}
   963                           
   964     00C0  1985               	btfsc	5,3	;volatile
   965     00C1  28C3               	goto	u68_21
   966     00C2  28C4               	goto	u68_20
   967     00C3                     u68_21:
   968     00C3  28C0               	goto	i1l156
   969     00C4                     u68_20:
   970     00C4                     i1l987:
   971                           
   972                           ;funtions.c: 59:                 state=ESPERA;}
   973     00C4  01A8               	clrf	_state
   974     00C5                     i1l989:
   975                           
   976                           ;funtions.c: 61:         if((count!=0) && (GPIO3==1) )
   977     00C5  0822               	movf	button@count,w
   978     00C6  0423               	iorwf	button@count+1,w
   979     00C7  1903               	btfsc	3,2
   980     00C8  28CA               	goto	u69_21
   981     00C9  28CB               	goto	u69_20
   982     00CA                     u69_21:
   983     00CA  28D5               	goto	i1l995
   984     00CB                     u69_20:
   985     00CB                     i1l991:
   986     00CB  1D85               	btfss	5,3	;volatile
   987     00CC  28CE               	goto	u70_21
   988     00CD  28CF               	goto	u70_20
   989     00CE                     u70_21:
   990     00CE  28D5               	goto	i1l995
   991     00CF                     u70_20:
   992     00CF                     i1l993:
   993                           
   994                           ;funtions.c: 62:             count++;
   995     00CF  3001               	movlw	1
   996     00D0  07A2               	addwf	button@count,f
   997     00D1  1803               	skipnc
   998     00D2  0AA3               	incf	button@count+1,f
   999     00D3  3000               	movlw	0
  1000     00D4  07A3               	addwf	button@count+1,f
  1001     00D5                     i1l995:
  1002                           
  1003                           ;funtions.c: 64:         if(count >= 1){
  1004     00D5  0822               	movf	button@count,w
  1005     00D6  0423               	iorwf	button@count+1,w
  1006     00D7  1903               	btfsc	3,2
  1007     00D8  28DA               	goto	u71_21
  1008     00D9  28DB               	goto	u71_20
  1009     00DA                     u71_21:
  1010     00DA  28EF               	goto	i1l166
  1011     00DB                     u71_20:
  1012     00DB                     i1l997:
  1013                           
  1014                           ;funtions.c: 65:             (state>F16K) ? state=F1K : state++;
  1015     00DB  3006               	movlw	6
  1016     00DC  0228               	subwf	_state,w
  1017     00DD  1C03               	skipc
  1018     00DE  28E0               	goto	u72_21
  1019     00DF  28E1               	goto	u72_20
  1020     00E0                     u72_21:
  1021     00E0  28E4               	goto	i1l1001
  1022     00E1                     u72_20:
  1023     00E1                     i1l999:
  1024     00E1  01A8               	clrf	_state
  1025     00E2  0AA8               	incf	_state,f
  1026     00E3  28E8               	goto	i1l1003
  1027     00E4                     i1l1001:
  1028     00E4  3001               	movlw	1
  1029     00E5  00DF               	movwf	btemp+1
  1030     00E6  085F               	movf	btemp+1,w
  1031     00E7  07A8               	addwf	_state,f
  1032     00E8                     i1l1003:
  1033                           
  1034                           ;funtions.c: 66:             count=1;}
  1035     00E8  3001               	movlw	1
  1036     00E9  00A2               	movwf	button@count
  1037     00EA  3000               	movlw	0
  1038     00EB  00A3               	movwf	button@count+1
  1039     00EC  28EF               	goto	i1l166
  1040     00ED                     i1l1005:
  1041                           
  1042                           ;funtions.c: 68:         count=0;
  1043     00ED  01A2               	clrf	button@count
  1044     00EE  01A3               	clrf	button@count+1
  1045     00EF                     i1l166:
  1046     00EF  0008               	return
  1047     00F0                     __end_of_button:
  1048                           
  1049                           	psect	text5
  1050     01C4                     __ptext5:	
  1051 ;; *************** function _blink *****************
  1052 ;; Defined at:
  1053 ;;		line 37 in file "funtions.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0
  1067 ;;      Params:         0       0
  1068 ;;      Locals:         0       0
  1069 ;;      Temps:          0       0
  1070 ;;      Totals:         0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_ISR
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080     01C4                     _blink:	
  1081                           ;psect for function _blink
  1082                           
  1083     01C4                     i1l959:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _blink: [wreg]
  1086                           
  1087                           
  1088                           ;funtions.c: 38:     static unsigned char sp = ESPERA;;funtions.c: 39:     if (sp != sta
      +                          te){
  1089     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1090     01C5  0824               	movf	blink@sp,w
  1091     01C6  0628               	xorwf	_state,w
  1092     01C7  1903               	skipnz
  1093     01C8  29CA               	goto	u60_21
  1094     01C9  29CB               	goto	u60_20
  1095     01CA                     u60_21:
  1096     01CA  29CF               	goto	i1l146
  1097     01CB                     u60_20:
  1098     01CB                     i1l961:
  1099                           
  1100                           ;funtions.c: 40:         sp=state;
  1101     01CB  0828               	movf	_state,w
  1102     01CC  00A4               	movwf	blink@sp
  1103     01CD                     i1l963:
  1104                           
  1105                           ;funtions.c: 41:         GPIO2=HIGH;}
  1106     01CD  1505               	bsf	5,2	;volatile
  1107     01CE  29D0               	goto	i1l148
  1108     01CF                     i1l146:	
  1109                           ;funtions.c: 42:     else
  1110                           
  1111                           
  1112                           ;funtions.c: 43:         GPIO2=LOW;
  1113     01CF  1105               	bcf	5,2	;volatile
  1114     01D0                     i1l148:
  1115     01D0  0008               	return
  1116     01D1                     __end_of_blink:
  1117                           
  1118                           	psect	text6
  1119     0131                     __ptext6:	
  1120 ;; *************** function _TX_frec *****************
  1121 ;; Defined at:
  1122 ;;		line 67 in file "uart.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0
  1136 ;;      Params:         0       0
  1137 ;;      Locals:         0       0
  1138 ;;      Temps:          0       0
  1139 ;;      Totals:         0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 1
  1143 ;; This function calls:
  1144 ;;		_send
  1145 ;; This function is called by:
  1146 ;;		_ISR
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150     0131                     _TX_frec:	
  1151                           ;psect for function _TX_frec
  1152                           
  1153     0131                     i1l941:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _TX_frec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1156                           
  1157                           
  1158                           ;uart.c: 68:     send('F');
  1159     0131  3046               	movlw	70
  1160     0132  201C               	fcall	_send
  1161                           
  1162                           ;uart.c: 69:     send('=');
  1163     0133  303D               	movlw	61
  1164     0134  201C               	fcall	_send
  1165                           
  1166                           ;uart.c: 70:     switch(state) {
  1167     0135  294A               	goto	i1l955
  1168     0136                     i1l943:
  1169                           
  1170                           ;uart.c: 72:             send('1');
  1171     0136  3031               	movlw	49
  1172     0137  201C               	fcall	_send
  1173                           
  1174                           ;uart.c: 73:             break;
  1175     0138  295C               	goto	i1l957
  1176     0139                     i1l945:
  1177                           
  1178                           ;uart.c: 75:             send('2');
  1179     0139  3032               	movlw	50
  1180     013A  201C               	fcall	_send
  1181                           
  1182                           ;uart.c: 76:             break;
  1183     013B  295C               	goto	i1l957
  1184     013C                     i1l947:
  1185                           
  1186                           ;uart.c: 78:             send('4');
  1187     013C  3034               	movlw	52
  1188     013D  201C               	fcall	_send
  1189                           
  1190                           ;uart.c: 79:             break;
  1191     013E  295C               	goto	i1l957
  1192     013F                     i1l949:
  1193                           
  1194                           ;uart.c: 81:             send('8');
  1195     013F  3038               	movlw	56
  1196     0140  201C               	fcall	_send
  1197                           
  1198                           ;uart.c: 82:             break;
  1199     0141  295C               	goto	i1l957
  1200     0142                     i1l951:
  1201                           
  1202                           ;uart.c: 84:             send('1');
  1203     0142  3031               	movlw	49
  1204     0143  201C               	fcall	_send
  1205                           
  1206                           ;uart.c: 85:             send('6');
  1207     0144  3036               	movlw	54
  1208     0145  201C               	fcall	_send
  1209                           
  1210                           ;uart.c: 86:             break;
  1211     0146  295C               	goto	i1l957
  1212     0147                     i1l953:
  1213                           
  1214                           ;uart.c: 88:             send('0');
  1215     0147  3030               	movlw	48
  1216     0148  201C               	fcall	_send
  1217                           
  1218                           ;uart.c: 89:     }
  1219     0149  295C               	goto	i1l957
  1220     014A                     i1l955:
  1221     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1222     014B  0828               	movf	_state,w
  1223                           
  1224                           ; Switch size 1, requested type "simple"
  1225                           ; Number of cases is 5, Range of values is 1 to 5
  1226                           ; switch strategies available:
  1227                           ; Name         Instructions Cycles
  1228                           ; direct_byte           14     9 (fixed)
  1229                           ; simple_byte           16     9 (average)
  1230                           ; jumptable            263     9 (fixed)
  1231                           ;	Chosen strategy is simple_byte
  1232     014C  3A01               	xorlw	1	; case 1
  1233     014D  1903               	skipnz
  1234     014E  2936               	goto	i1l943
  1235     014F  3A03               	xorlw	3	; case 2
  1236     0150  1903               	skipnz
  1237     0151  2939               	goto	i1l945
  1238     0152  3A01               	xorlw	1	; case 3
  1239     0153  1903               	skipnz
  1240     0154  293C               	goto	i1l947
  1241     0155  3A07               	xorlw	7	; case 4
  1242     0156  1903               	skipnz
  1243     0157  293F               	goto	i1l949
  1244     0158  3A01               	xorlw	1	; case 5
  1245     0159  1903               	skipnz
  1246     015A  2942               	goto	i1l951
  1247     015B  2947               	goto	i1l953
  1248     015C                     i1l957:
  1249                           
  1250                           ;uart.c: 90:     send('K');
  1251     015C  304B               	movlw	75
  1252     015D  201C               	fcall	_send
  1253                           
  1254                           ;uart.c: 91:     send('H');
  1255     015E  3048               	movlw	72
  1256     015F  201C               	fcall	_send
  1257                           
  1258                           ;uart.c: 92:     send('z');
  1259     0160  307A               	movlw	122
  1260     0161  201C               	fcall	_send
  1261                           
  1262                           ;uart.c: 93:     send(13);
  1263     0162  300D               	movlw	13
  1264     0163  201C               	fcall	_send
  1265     0164                     i1l30:
  1266     0164  0008               	return
  1267     0165                     __end_of_TX_frec:
  1268                           
  1269                           	psect	text7
  1270     001C                     __ptext7:	
  1271 ;; *************** function _send *****************
  1272 ;; Defined at:
  1273 ;;		line 20 in file "uart.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  ch              1    wreg     unsigned char 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;  ch              1    1[BANK0 ] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0
  1287 ;;      Params:         0       0
  1288 ;;      Locals:         0       1
  1289 ;;      Temps:          0       1
  1290 ;;      Totals:         0       2
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_TX_frec
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300     001C                     _send:	
  1301                           ;psect for function _send
  1302                           
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _send: [wreg]
  1306                           ;send@ch stored from wreg
  1307     001C  1283               	bcf	3,5	;RP0=0, select bank0
  1308     001D  00AA               	movwf	send@ch
  1309     001E                     i1l919:
  1310                           
  1311                           ;uart.c: 21:     datosend.byte = ch;
  1312     001E  082A               	movf	send@ch,w
  1313     001F  00A7               	movwf	_datosend
  1314     0020                     i1l921:
  1315                           
  1316                           ;uart.c: 22:      GPIO4 =LOW;
  1317     0020  1205               	bcf	5,4	;volatile
  1318                           
  1319                           ;uart.c: 23:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1320     0021  3021               	movlw	33
  1321     0022  00A9               	movwf	??_send
  1322     0023                     u84_27:
  1323     0023  0BA9               	decfsz	??_send,f
  1324     0024  2823               	goto	u84_27
  1325     0025                     i1l923:
  1326                           
  1327                           ;uart.c: 24:      GPIO4 =(__bit)datosend.bit0;
  1328     0025  1283               	bcf	3,5	;RP0=0, select bank0
  1329     0026  1827               	btfsc	_datosend,0
  1330     0027  2829               	goto	u44_21
  1331     0028  282C               	goto	u44_20
  1332     0029                     u44_21:
  1333     0029  1283               	bcf	3,5	;RP0=0, select bank0
  1334     002A  1605               	bsf	5,4	;volatile
  1335     002B  282E               	goto	u45_24
  1336     002C                     u44_20:
  1337     002C  1283               	bcf	3,5	;RP0=0, select bank0
  1338     002D  1205               	bcf	5,4	;volatile
  1339     002E                     u45_24:
  1340                           
  1341                           ;uart.c: 25:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1342     002E  3021               	movlw	33
  1343     002F  00A9               	movwf	??_send
  1344     0030                     u85_27:
  1345     0030  0BA9               	decfsz	??_send,f
  1346     0031  2830               	goto	u85_27
  1347     0032                     i1l925:
  1348                           
  1349                           ;uart.c: 26:      GPIO4 =(__bit)datosend.bit1;
  1350     0032  1283               	bcf	3,5	;RP0=0, select bank0
  1351     0033  18A7               	btfsc	_datosend,1
  1352     0034  2836               	goto	u46_21
  1353     0035  2839               	goto	u46_20
  1354     0036                     u46_21:
  1355     0036  1283               	bcf	3,5	;RP0=0, select bank0
  1356     0037  1605               	bsf	5,4	;volatile
  1357     0038  283B               	goto	u47_24
  1358     0039                     u46_20:
  1359     0039  1283               	bcf	3,5	;RP0=0, select bank0
  1360     003A  1205               	bcf	5,4	;volatile
  1361     003B                     u47_24:
  1362                           
  1363                           ;uart.c: 27:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1364     003B  3021               	movlw	33
  1365     003C  00A9               	movwf	??_send
  1366     003D                     u86_27:
  1367     003D  0BA9               	decfsz	??_send,f
  1368     003E  283D               	goto	u86_27
  1369     003F                     i1l927:
  1370                           
  1371                           ;uart.c: 28:      GPIO4 =(__bit)datosend.bit2;
  1372     003F  1283               	bcf	3,5	;RP0=0, select bank0
  1373     0040  1927               	btfsc	_datosend,2
  1374     0041  2843               	goto	u48_21
  1375     0042  2846               	goto	u48_20
  1376     0043                     u48_21:
  1377     0043  1283               	bcf	3,5	;RP0=0, select bank0
  1378     0044  1605               	bsf	5,4	;volatile
  1379     0045  2848               	goto	u49_24
  1380     0046                     u48_20:
  1381     0046  1283               	bcf	3,5	;RP0=0, select bank0
  1382     0047  1205               	bcf	5,4	;volatile
  1383     0048                     u49_24:
  1384                           
  1385                           ;uart.c: 29:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1386     0048  3021               	movlw	33
  1387     0049  00A9               	movwf	??_send
  1388     004A                     u87_27:
  1389     004A  0BA9               	decfsz	??_send,f
  1390     004B  284A               	goto	u87_27
  1391     004C                     i1l929:
  1392                           
  1393                           ;uart.c: 30:      GPIO4 =(__bit)datosend.bit3;
  1394     004C  1283               	bcf	3,5	;RP0=0, select bank0
  1395     004D  19A7               	btfsc	_datosend,3
  1396     004E  2850               	goto	u50_21
  1397     004F  2853               	goto	u50_20
  1398     0050                     u50_21:
  1399     0050  1283               	bcf	3,5	;RP0=0, select bank0
  1400     0051  1605               	bsf	5,4	;volatile
  1401     0052  2855               	goto	u51_24
  1402     0053                     u50_20:
  1403     0053  1283               	bcf	3,5	;RP0=0, select bank0
  1404     0054  1205               	bcf	5,4	;volatile
  1405     0055                     u51_24:
  1406                           
  1407                           ;uart.c: 31:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1408     0055  3021               	movlw	33
  1409     0056  00A9               	movwf	??_send
  1410     0057                     u88_27:
  1411     0057  0BA9               	decfsz	??_send,f
  1412     0058  2857               	goto	u88_27
  1413     0059                     i1l931:
  1414                           
  1415                           ;uart.c: 32:      GPIO4 =(__bit)datosend.bit4;
  1416     0059  1283               	bcf	3,5	;RP0=0, select bank0
  1417     005A  1A27               	btfsc	_datosend,4
  1418     005B  285D               	goto	u52_21
  1419     005C  2860               	goto	u52_20
  1420     005D                     u52_21:
  1421     005D  1283               	bcf	3,5	;RP0=0, select bank0
  1422     005E  1605               	bsf	5,4	;volatile
  1423     005F  2862               	goto	u53_24
  1424     0060                     u52_20:
  1425     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0061  1205               	bcf	5,4	;volatile
  1427     0062                     u53_24:
  1428                           
  1429                           ;uart.c: 33:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1430     0062  3021               	movlw	33
  1431     0063  00A9               	movwf	??_send
  1432     0064                     u89_27:
  1433     0064  0BA9               	decfsz	??_send,f
  1434     0065  2864               	goto	u89_27
  1435     0066                     i1l933:
  1436                           
  1437                           ;uart.c: 34:      GPIO4 =(__bit)datosend.bit5;
  1438     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1439     0067  1AA7               	btfsc	_datosend,5
  1440     0068  286A               	goto	u54_21
  1441     0069  286D               	goto	u54_20
  1442     006A                     u54_21:
  1443     006A  1283               	bcf	3,5	;RP0=0, select bank0
  1444     006B  1605               	bsf	5,4	;volatile
  1445     006C  286F               	goto	u55_24
  1446     006D                     u54_20:
  1447     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1448     006E  1205               	bcf	5,4	;volatile
  1449     006F                     u55_24:
  1450                           
  1451                           ;uart.c: 35:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1452     006F  3021               	movlw	33
  1453     0070  00A9               	movwf	??_send
  1454     0071                     u90_27:
  1455     0071  0BA9               	decfsz	??_send,f
  1456     0072  2871               	goto	u90_27
  1457     0073                     i1l935:
  1458                           
  1459                           ;uart.c: 36:      GPIO4 =(__bit)datosend.bit6;
  1460     0073  1283               	bcf	3,5	;RP0=0, select bank0
  1461     0074  1B27               	btfsc	_datosend,6
  1462     0075  2877               	goto	u56_21
  1463     0076  287A               	goto	u56_20
  1464     0077                     u56_21:
  1465     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1466     0078  1605               	bsf	5,4	;volatile
  1467     0079  287C               	goto	u57_24
  1468     007A                     u56_20:
  1469     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1470     007B  1205               	bcf	5,4	;volatile
  1471     007C                     u57_24:
  1472                           
  1473                           ;uart.c: 37:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1474     007C  3021               	movlw	33
  1475     007D  00A9               	movwf	??_send
  1476     007E                     u91_27:
  1477     007E  0BA9               	decfsz	??_send,f
  1478     007F  287E               	goto	u91_27
  1479     0080                     i1l937:
  1480                           
  1481                           ;uart.c: 38:      GPIO4 =(__bit)datosend.bit7;
  1482     0080  1283               	bcf	3,5	;RP0=0, select bank0
  1483     0081  1BA7               	btfsc	_datosend,7
  1484     0082  2884               	goto	u58_21
  1485     0083  2887               	goto	u58_20
  1486     0084                     u58_21:
  1487     0084  1283               	bcf	3,5	;RP0=0, select bank0
  1488     0085  1605               	bsf	5,4	;volatile
  1489     0086  2889               	goto	u59_24
  1490     0087                     u58_20:
  1491     0087  1283               	bcf	3,5	;RP0=0, select bank0
  1492     0088  1205               	bcf	5,4	;volatile
  1493     0089                     u59_24:
  1494                           
  1495                           ;uart.c: 39:      _delay((unsigned long)((100)*(4000000/4000000.0)));
  1496     0089  3021               	movlw	33
  1497     008A  00A9               	movwf	??_send
  1498     008B                     u92_27:
  1499     008B  0BA9               	decfsz	??_send,f
  1500     008C  288B               	goto	u92_27
  1501     008D                     i1l939:
  1502                           
  1503                           ;uart.c: 40:      GPIO4 =HIGH;
  1504     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1505     008E  1605               	bsf	5,4	;volatile
  1506     008F                     i1l15:
  1507     008F  0008               	return
  1508     0090                     __end_of_send:
  1509     005E                     btemp	set	94	;btemp
  1510     005E                     wtemp0	set	94
  1511                           
  1512                           	psect	config
  1513                           
  1514                           ;Config register CONFIG @ 0x2007
  1515                           ;	Oscillator Selection bits
  1516                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  1517                           ;	Watchdog Timer Enable bit
  1518                           ;	WDTE = OFF, WDT disabled
  1519                           ;	Power-Up Timer Enable bit
  1520                           ;	PWRTE = OFF, PWRT disabled
  1521                           ;	GP3/MCLR pin function select
  1522                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  1523                           ;	Brown-out Detect Enable bit
  1524                           ;	BOREN = ON, BOD enabled
  1525                           ;	Code Protection bit
  1526                           ;	CP = OFF, Program Memory code protection is disabled
  1527                           ;	Data Code Protection bit
  1528                           ;	CPD = OFF, Data memory code protection is disabled
  1529     2007                     	org	8199
  1530     2007  31D4               	dw	12756

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      7      16

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _TX_frec->_send

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0      22
                                              2 BANK0      4     4      0
                            _TX_frec
                              _blink
                             _button
                         _one_minute
 ---------------------------------------------------------------------------------
 (3) _one_minute                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _button                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _blink                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TX_frec                                              0     0      0      22
                               _send
 ---------------------------------------------------------------------------------
 (4) _send                                                 2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _ISR (ROOT)
   _TX_frec
     _send
   _blink
   _button
   _one_minute

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      7      10       4       25.8%
ABS                  0      0      10       5        0.0%
DATA                 0      0      10       6        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 22 16:21:32 2024

                     l72 00F2                      l141 01AB                      _GIE 005F  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    _ISR 0165                      u807 0107                      _PSA 040B  
                    u817 010F                      u827 0116                      u787 00F8  
                    u797 0100                      fsr0 0004                     ?_ISR 0029  
                   l1021 0194                     l1031 019A                     l1023 0196  
                   l1015 018E                     l1041 01A0                     l1033 019C  
                   l1025 0197                     l1017 0191                     l1051 01A6  
                   l1043 01A1                     l1035 019D                     l1027 0198  
                   l1019 0193                     l1053 01A7                     l1045 01A2  
                   l1037 019E                     l1029 0199                     l1055 01A8  
                   l1047 01A3                     l1039 019F                     l1057 01A9  
                   l1049 01A5                     l1059 01AA                     l1091 010B  
                   l1083 00F0                     l1093 0112                     l1085 00F4  
                   l1095 011A                     l1087 00FC                     l1089 0103  
                   l1097 011B                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 040D                     _IOC0 04B0                     _IOC1 04B1  
                   _IOC2 04B2                     _IOC3 04B3                     _IOC4 04B4  
                   _IOC5 04B5                     _GPIE 005B                     _GPIF 0058  
                   _GPIO 0005                     _PEIE 005E                     _INTE 005C  
                   i1l30 0164                     _INTF 0059                     i1l15 008F  
                   i1l65 0184                     i1l59 016B                     _TMR0 0001  
                   _dato 0026                     _main 00F0                     _init 018E  
                   _send 001C                     btemp 005E                     start 000F  
        __end_of_TX_frec 0165                    ??_ISR 002B                    ?_main 0029  
                  ?_init 0029                    ?_send 0029                    _GPIO1 0029  
                  _GPIO2 002A                    _GPIO3 002B                    _GPIO4 002C  
                  _GPIO5 002D                    i1l146 01CF                    i1l148 01D0  
                  i1l156 00C0                    i1l173 01C3                    i1l166 00EF  
                  i1l921 0020                    i1l931 0059                    i1l923 0025  
                  i1l933 0066                    i1l925 0032                    i1l941 0131  
                  i1l935 0073                    i1l927 003F                    i1l919 001E  
                  i1l951 0142                    i1l943 0136                    i1l937 0080  
                  i1l929 004C                    i1l953 0147                    i1l945 0139  
                  i1l961 01CB                    i1l939 008D                    i1l947 013C  
                  i1l955 014A                    i1l963 01CD                    i1l971 00A1  
                  i1l949 013F                    i1l957 015C                    i1l981 00B6  
                  i1l973 00A6                    i1l965 0090                    i1l959 01C4  
                  i1l991 00CB                    i1l983 00BB                    i1l975 00AA  
                  i1l967 0095                    i1l993 00CF                    i1l985 00BF  
                  i1l977 00AC                    i1l969 009A                    i1l995 00D5  
                  i1l987 00C4                    i1l979 00B0                    i1l997 00DB  
                  i1l989 00C5                    i1l999 00E1                    u50_20 0053  
                  u50_21 0050                    u51_24 0055                    u52_20 0060  
                  u44_20 002C                    u60_20 01CB                    u52_21 005D  
                  u44_21 0029                    u60_21 01CA                    u61_20 0095  
                  u61_21 0094                    u53_24 0062                    u45_24 002E  
                  u54_20 006D                    u46_20 0039                    u70_20 00CF  
                  u62_20 00A1                    u54_21 006A                    u46_21 0036  
                  u70_21 00CE                    u62_21 00A0                    u71_20 00DB  
                  u63_20 00A6                    u71_21 00DA                    u63_21 00A5  
                  u55_24 006F                    u47_24 003B                    u56_20 007A  
                  u48_20 0046                    u72_20 00E1                    u64_20 00AA  
                  u56_21 0077                    u48_21 0043                    u72_21 00E0  
                  u64_21 00A9                    u65_20 00B6                    u73_20 01BC  
                  u65_21 00B5                    u73_21 01BB                    u57_24 007C  
                  u49_24 0048                    u58_20 0087                    u66_20 00BB  
                  u74_20 01C1                    u58_21 0084                    u66_21 00BA  
                  u74_21 01C0                    u90_27 0071                    u67_20 00BF  
                  u75_20 0169                    u67_21 00BE                    u75_21 0168  
                  u59_24 0089                    u91_27 007E                    u83_27 0097  
                  u68_20 00C4                    u76_20 016F                    u68_21 00C3  
                  u76_21 016E                    u92_27 008B                    u84_27 0023  
                  u69_20 00CB                    u77_20 0177                    u69_21 00CA  
                  u77_21 0176                    u85_27 0030                    u86_27 003D  
                  u87_27 004A                    u88_27 0057                    u89_27 0064  
                  _blink 01C4                    _state 0028                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 0010  
           __end_of_main 0131             __end_of_init 01AC             __end_of_send 0090  
                 ??_main 002F                   ??_init 0000                   ??_send 0029  
                 ?_blink 0029                   i1l1001 00E4                   i1l1003 00E8  
                 i1l1011 01BD                   i1l1005 00ED                   i1l1013 01C1  
                 i1l1007 01AC                   i1l1009 01BC                   i1l1061 0165  
                 i1l1071 0178                   i1l1063 0169                   i1l1081 0183  
                 i1l1073 017A                   i1l1065 016F                   i1l1075 017B  
                 i1l1067 0170                   i1l1069 0177                   i1l1077 017D  
                 i1l1079 0181                   _INTEDG 040E                   _TRISIO 0085  
              ??_TX_frec 0000              button@count 0022                   _button 0090  
                 send@ch 002A                   saved_w 005E  __end_of__initialization 001A  
         __pcstackCOMMON 0000            __end_of_blink 01D1              ISR@contador 0025  
                ??_blink 0000               __pbssBANK0 0020               __pmaintext 00F0  
             __pintentry 0004                  ?_button 0029          one_minute@count 0020  
                _TX_frec 0131                  __ptext1 018E                  __ptext2 0165  
                __ptext3 01AC                  __ptext4 0090                  __ptext5 01C4  
                __ptext6 0131                  __ptext7 001C                  blink@sp 0024  
             _one_minute 01AC     end_of_initialization 001A           __end_of_button 00F0  
    start_initialization 0010              __end_of_ISR 018E              ?_one_minute 0029  
               ??_button 0029                ___latbits 0000            __pcstackBANK0 0029  
               ?_TX_frec 0029        interrupt_function 0004                 _datosend 0027  
           ??_one_minute 0000       __end_of_one_minute 01C4                 intlevel1 0000  
